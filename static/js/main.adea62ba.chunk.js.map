{"version":3,"sources":["../../../src/addVersionToMetaTag.js","../../../../src/ScrollToBottom/FunctionContext.js","../../../../../src/hooks/internal/useFunctionContext.js","../../../../src/hooks/useScrollToEnd.js","../../../../src/ScrollToBottom/State1Context.js","../../../../src/ScrollToBottom/State2Context.js","../../../../src/ScrollToBottom/StateContext.js","../../../../../src/hooks/internal/useStateContext.js","../../../../src/hooks/useSticky.js","../../../../src/ScrollToBottom/InternalContext.js","../../../../../src/hooks/internal/useInternalContext.js","../../../../../src/hooks/internal/useStyleToClassName.js","../../../../src/ScrollToBottom/AutoHideFollowButton.js","../../../../src/utils/styleConsole.js","../../../../src/utils/debug.js","../../../src/EventSpy.js","../../../src/debounce.js","../../../src/SpineTo.js","../../../../../src/hooks/internal/useStateRef.js","../../../../src/ScrollToBottom/Composer.js","../../../src/createCSSKey.js","../../../../src/ScrollToBottom/Panel.js","../../../src/BasicScrollToBottom.js","../../../src/index.js","CommandBar.js","../../../../src/hooks/useScrollTo.js","../../../../src/hooks/useScrollToBottom.js","../../../../src/hooks/useScrollToStart.js","../../../../src/hooks/useScrollToTop.js","StatusBar.js","../../../../src/hooks/useAnimating.js","../../../../src/hooks/useAnimatingToEnd.js","../../../../src/hooks/useAtBottom.js","../../../../src/hooks/useAtEnd.js","../../../../src/hooks/useAtStart.js","../../../../src/hooks/useAtTop.js","../../../../src/hooks/useMode.js","../../../../src/hooks/useObserveScrollPosition.js","App.js","reportWebVitals.js","index.js"],"names":["addVersionToMetaTag","name","content","document","meta","encodeURI","err","setMetaTag","context","scrollTo","scrollToBottom","scrollToEnd","scrollToStart","scrollToTop","useFunctionContext","useContext","useScrollToEnd","atBottom","atEnd","atStart","atTop","mode","animating","animatingToEnd","sticky","stateContexts","StateContext","State1Context","useStateContext","tier","useSticky","offsetHeight","scrollHeight","setTarget","styleToClassName","useInternalContext","useStyleToClassName","ROOT_STYLE","backgroundColor","borderRadius","borderWidth","bottom","cursor","height","outline","position","right","width","AutoHideFollowButton","children","className","rootCSS","classNames","onClick","type","PropTypes","string","styleConsole","color","styles","format","category","arg0","args","EventSpy","debounce","onEvent","target","onEventRef","useRef","debouncer","useMemo","last","timeout","now","fn","clearTimeout","Math","ms","debounceFn","event","current","handleEvent","useCallback","useLayoutEffect","passive","squareStepper","to","sign","next","i","stepper","SpineTo","onEnd","value","animator","animate","start","cancelAnimationFrame","requestAnimationFrame","toNumber","nextValue","step","from","index","handleCancelAnimation","isRequired","useStateRef","initialState","useState","state","setState","ref","setValue","MODE_TOP","emotionPool","computeViewState","scrollTop","isEnd","animateTo","Composer","checkInterval","debugFromProp","debug","initialScrollBehavior","nonce","scroller","force","lines","oneLiner","console","createDebug","ignoreScrollEventBeforeRef","initialScrollBehaviorRef","setAnimateTo","animateToRef","targetRef","animateFromRef","offsetHeightRef","scrollHeightRef","setAtBottom","setAtEnd","setAtTop","setAtStart","setSticky","stickyRef","scrollPositionObserversRef","observeScrollPosition","scrollPositionObservers","handleSpineToEnd","behavior","nextAnimateTo","options","scrollToSticky","animateFrom","maxValue","minValue","rawNextValue","handleScroll","timeStampLow","nextOffsetHeight","nextScrollHeight","offsetHeightChanged","scrollHeightChanged","prevOffsetHeight","prevScrollHeight","nextSticky","actualScrollTop","observer","useEffect","stickyButNotAtEndSince","clearInterval","emotion","createEmotion","key","String","style","internalContext","state1Context","state2Context","combinedStateContext","functionContext","handleFocus","capture","InternalContext","FunctionContext","State2Context","func","overflowY","Panel","undefined","BasicScrollToBottomCore","followButtonClassName","scrollViewClassName","BasicScrollToBottom","boxShadow","display","listStyleType","margin","padding","fontSize","marginLeft","CommandBar","css","setOptions","handleScrollTo100pxClick","handleScrollToBottomClick","handleScrollToEndClick","handleScrollToStartClick","handleScrollToTopClick","handleSmoothChange","checked","onChange","alignItems","flex","fontFamily","justifyContent","textAlign","StatusBar","scrollTopRef","deps","useObserveScrollPosition","innerText","FADE_IN_ANIMATION_KEYFRAMES","opacity","marginRight","CONTAINER_STYLE","borderColor","borderStyle","marginTop","LARGE_CONTAINER_STYLE","SCROLL_VIEW_STYLE","SCROLL_VIEW_PADDING_STYLE","paddingLeft","paddingRight","SMALL_CONTAINER_STYLE","STATUS_BAR_CSS","createParagraphs","count","Array","fill","map","loremIpsum","units","App","keyframes","containerCSS","largeContainerCSS","scrollViewCSS","scrollViewPaddingCSS","animation","smallContainerCSS","statusBarCSS","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","limitAutoScrollHeight","setLimitAutoScrollHeight","querySelector","getAttribute","loadedVersion","disableScrollToBottomPanel","setDisableScrollToBottomPanel","disableScrollToTopPanel","setDisableScrollToTopPanel","handleDisableScrollToBottomPanelClick","handleDisableScrollToTopPanelClick","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleAddSuccessively","lorem","LoremIpsum","nextParagraphs","generateSentences","generateParagraphs","handleAddAndRemove","push","handleClear","handleCommandBarVisibleChange","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","handleLimitAutoScrollHeightChange","containerClassName","handleKeyDown","keyCode","window","location","reload","addEventListener","removeEventListener","title","Consumer","paragraph","startsWith","substr","reverse","callback","enabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adea62ba.chunk.js","sourcesContent":["/* global global:readonly, process:readonly */\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nfunction setMetaTag(name, content) {\n  try {\n    const { document } = global;\n\n    if (typeof document !== 'undefined' && document.createElement && document.head && document.head.appendChild) {\n      const meta = document.querySelector(`html meta[name=\"${encodeURI(name)}\"]`) || document.createElement('meta');\n\n      meta.setAttribute('name', name);\n      meta.setAttribute('content', content);\n\n      document.head.appendChild(meta);\n    }\n  } catch (err) {}\n}\n\nexport default function addVersionToMetaTag() {\n  setMetaTag('react-scroll-to-bottom:version', process.env.npm_package_version);\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  scrollTo: () => 0,\n  scrollToBottom: () => 0,\n  scrollToEnd: () => 0,\n  scrollToStart: () => 0,\n  scrollToTop: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomFunctionContext';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport FunctionContext from '../../ScrollToBottom/FunctionContext';\n\nexport default function useFunctionContext() {\n  return useContext(FunctionContext);\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToEnd() {\n  const { scrollToEnd } = useFunctionContext();\n\n  return scrollToEnd;\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom'\n});\n\ncontext.displayName = 'ScrollToBottomState1Context';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomState2Context';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom',\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomStateContext';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport State1Context from '../../ScrollToBottom/State1Context';\nimport State2Context from '../../ScrollToBottom/State2Context';\nimport StateContext from '../../ScrollToBottom/StateContext';\n\nconst stateContexts = [StateContext, State1Context, State2Context];\n\nexport default function useStateContext(tier) {\n  return useContext(stateContexts[tier] || stateContexts[0]);\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useSticky() {\n  const { sticky } = useStateContext(2);\n\n  return [sticky];\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  offsetHeight: 0,\n  scrollHeight: 0,\n  setTarget: () => 0,\n  styleToClassName: () => ''\n});\n\ncontext.displayName = 'ScrollToBottomInternalContext';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport InternalContext from '../../ScrollToBottom/InternalContext';\n\nexport default function useInternalContext() {\n  return useContext(InternalContext);\n}\n","import useInternalContext from './useInternalContext';\n\nexport default function useStyleToClassName() {\n  const { styleToClassName } = useInternalContext();\n\n  return styleToClassName;\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useSticky from '../hooks/useSticky';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  backgroundColor: 'rgba(0, 0, 0, .2)',\n  borderRadius: 10,\n  borderWidth: 0,\n  bottom: 5,\n  cursor: 'pointer',\n  height: 20,\n  outline: 0,\n  position: 'absolute',\n  right: 20,\n  width: 20,\n\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n\n  '&:active': {\n    backgroundColor: 'rgba(0, 0, 0, .6)'\n  }\n};\n\nconst AutoHideFollowButton = ({ children, className }) => {\n  const [sticky] = useSticky();\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n  const scrollToEnd = useScrollToEnd();\n\n  return (\n    !sticky && (\n      <button className={classNames(rootCSS, (className || '') + '')} onClick={scrollToEnd} type=\"button\">\n        {children}\n      </button>\n    )\n  );\n};\n\nAutoHideFollowButton.defaultProps = {\n  children: undefined,\n  className: ''\n};\n\nAutoHideFollowButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default AutoHideFollowButton;\n","export default function styleConsole(backgroundColor, color = 'white') {\n  let styles = `background-color: ${backgroundColor}; border-radius: 4px; padding: 2px 4px;`;\n\n  if (color) {\n    styles += ` color: ${color};`;\n  }\n\n  return [styles, ''];\n}\n","/* eslint no-console: [\"off\"] */\n\nimport styleConsole from './styleConsole';\n\nfunction format(category, arg0, ...args) {\n  return [`%c${category}%c ${arg0}`, ...styleConsole('green', 'white'), ...args];\n}\n\nexport default function debug(category, { force = false } = {}) {\n  if (!force) {\n    return () => 0;\n  }\n\n  return (...args) => {\n    if (!args.length) {\n      return;\n    }\n\n    const [arg0] = args;\n\n    if (typeof arg0 === 'function') {\n      args = arg0();\n    }\n\n    const lines = Array.isArray(args[0]) ? args : [args];\n    const oneLiner = lines.length === 1;\n\n    lines.forEach((line, index) => {\n      if (oneLiner) {\n        console.log(...format(category, ...line));\n      } else if (index) {\n        console.log(...(Array.isArray(line) ? line : [line]));\n      } else {\n        console.groupCollapsed(...format(category, ...line));\n      }\n    });\n\n    oneLiner || console.groupEnd();\n  };\n}\n","import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n","export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport PropTypes from 'prop-types';\nimport { useCallback, useLayoutEffect, useRef } from 'react';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n      target.addEventListener('wheel', handleCancelAnimation, { passive: true });\n\n      return () => {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return () => cancelAnimationFrame(animator.current);\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n","import { useCallback, useRef, useState } from 'react';\n\nexport default function useStateRef(initialState) {\n  const [state, setState] = useState(initialState);\n  const ref = useRef();\n  const setValue = useCallback(\n    nextValue => {\n      if (typeof nextValue === 'function') {\n        setValue(state => {\n          nextValue = nextValue(state);\n\n          ref.current = nextValue;\n\n          return nextValue;\n        });\n      } else {\n        ref.current = nextValue;\n\n        setValue(nextValue);\n      }\n    },\n    [ref]\n  );\n\n  ref.current = state;\n\n  return [state, setState, ref];\n}\n","import createEmotion from '@emotion/css/create-instance';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport createCSSKey from '../createCSSKey';\nimport createDebug from '../utils/debug';\nimport EventSpy from '../EventSpy';\nimport FunctionContext from './FunctionContext';\nimport InternalContext from './InternalContext';\nimport SpineTo from '../SpineTo';\nimport State1Context from './State1Context';\nimport State2Context from './State2Context';\nimport StateContext from './StateContext';\nimport styleConsole from '../utils/styleConsole';\nimport useStateRef from '../hooks/internal/useStateRef';\n\nconst DEFAULT_SCROLLER = () => Infinity;\nconst MIN_CHECK_INTERVAL = 17; // 1 frame\nconst MODE_BOTTOM = 'bottom';\nconst MODE_TOP = 'top';\nconst NEAR_END_THRESHOLD = 1;\nconst SCROLL_DECISION_DURATION = 34; // 2 frames\n\n// We pool the emotion object by nonce.\n// This is to make sure we don't generate too many unneeded <style> tags.\nconst emotionPool = {};\n\nfunction setImmediateInterval(fn, ms) {\n  fn();\n\n  return setInterval(fn, ms);\n}\n\nfunction computeViewState({ mode, target: { offsetHeight, scrollHeight, scrollTop } }) {\n  const atBottom = scrollHeight - scrollTop - offsetHeight < NEAR_END_THRESHOLD;\n  const atTop = scrollTop < NEAR_END_THRESHOLD;\n\n  const atEnd = mode === MODE_TOP ? atTop : atBottom;\n  const atStart = mode !== MODE_TOP ? atTop : atBottom;\n\n  return {\n    atBottom,\n    atEnd,\n    atStart,\n    atTop\n  };\n}\n\nfunction isEnd(animateTo, mode) {\n  return animateTo === (mode === MODE_TOP ? 0 : '100%');\n}\n\nconst Composer = ({\n  checkInterval,\n  children,\n  debounce,\n  debug: debugFromProp,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller\n}) => {\n  const debug = useMemo(() => createDebug(`<ScrollToBottom>`, { force: debugFromProp }), [debugFromProp]);\n\n  mode = mode === MODE_TOP ? MODE_TOP : MODE_BOTTOM;\n\n  const ignoreScrollEventBeforeRef = useRef(0);\n  const initialScrollBehaviorRef = useRef(initialScrollBehavior);\n  const [animateTo, setAnimateTo, animateToRef] = useStateRef(mode === MODE_TOP ? 0 : '100%');\n  const [target, setTarget, targetRef] = useStateRef(null);\n\n  // Internal context\n  const animateFromRef = useRef(0);\n  const offsetHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n\n  // State context\n  const [atBottom, setAtBottom] = useState(true);\n  const [atEnd, setAtEnd] = useState(true);\n  const [atTop, setAtTop] = useState(true);\n  const [atStart, setAtStart] = useState(false);\n  const [sticky, setSticky, stickyRef] = useStateRef(true);\n\n  // High-rate state context\n  const scrollPositionObserversRef = useRef([]);\n  const observeScrollPosition = useCallback(\n    fn => {\n      const { current: target } = targetRef;\n\n      scrollPositionObserversRef.current.push(fn);\n      target && fn({ scrollTop: target.scrollTop });\n\n      return () => {\n        const { current: scrollPositionObservers } = scrollPositionObserversRef;\n        const index = scrollPositionObservers.indexOf(fn);\n\n        ~index && scrollPositionObservers.splice(index, 1);\n      };\n    },\n    [scrollPositionObserversRef, targetRef]\n  );\n\n  const handleSpineToEnd = useCallback(() => {\n    const { current: animateTo } = animateToRef;\n\n    debug(() => [\n      '%cSpineTo%c: %conEnd%c is fired.',\n      ...styleConsole('magenta'),\n      ...styleConsole('orange'),\n      { animateTo }\n    ]);\n\n    ignoreScrollEventBeforeRef.current = Date.now();\n\n    // handleScrollEnd may end at a position which should lose stickiness.\n    // In that case, we will need to set sticky to false to stop the interval check.\n    // Test case:\n    // 1. Add a scroller that always return 0\n    // 2. Show a panel with mode === MODE_BOTTOM\n    // 3. Programmatically scroll to 0 (set element.scrollTop = 0)\n    // Expected: it should not repetitively call scrollTo(0)\n    //           it should set stickiness to false\n\n    isEnd(animateTo, mode) || setSticky(false);\n    setAnimateTo(null);\n  }, [animateToRef, debug, ignoreScrollEventBeforeRef, mode, setAnimateTo, setSticky]);\n\n  // Function context\n  const scrollTo = useCallback(\n    (nextAnimateTo, { behavior } = {}) => {\n      const { current: target } = targetRef;\n\n      if (typeof nextAnimateTo !== 'number' && nextAnimateTo !== '100%') {\n        return console.warn('react-scroll-to-bottom: Arguments passed to scrollTo() must be either number or \"100%\".');\n      }\n\n      // If it is trying to scroll to a position which is not \"atEnd\", it should set sticky to false after scroll ended.\n\n      debug(() => [\n        [\n          `%cscrollTo%c: Will scroll to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c`,\n          ...styleConsole('lime', ''),\n          ...styleConsole('purple')\n        ],\n        {\n          behavior,\n          nextAnimateTo,\n          target\n        }\n      ]);\n\n      if (behavior === 'auto') {\n        // Stop any existing animation\n        handleSpineToEnd();\n\n        if (target) {\n          // Jump to the scroll position\n          target.scrollTop = nextAnimateTo === '100%' ? target.scrollHeight - target.offsetHeight : nextAnimateTo;\n        }\n      } else {\n        behavior !== 'smooth' &&\n          console.warn(\n            'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollTo\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n          );\n\n        setAnimateTo(nextAnimateTo);\n      }\n\n      // This is for handling a case. When calling scrollTo('100%', { behavior: 'auto' }) multiple times, it would lose stickiness.\n      if (isEnd(nextAnimateTo, mode)) {\n        debug(() => [\n          [\n            `%cscrollTo%c: Scrolling to end, will set sticky to %ctrue%c.`,\n            ...styleConsole('lime', ''),\n            ...styleConsole('purple')\n          ],\n          [{ mode, nextAnimateTo }]\n        ]);\n\n        setSticky(true);\n      }\n    },\n    [debug, handleSpineToEnd, mode, setAnimateTo, setSticky, targetRef]\n  );\n\n  const scrollToBottom = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToBottom%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToBottom\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo('100%', { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToTop = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToTop%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToTop\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo(0, { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToEnd = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToEnd%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToEnd\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToTop(options) : scrollToBottom(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToStart = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToStart%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToStart\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToBottom(options) : scrollToTop(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToSticky = useCallback(() => {\n    const { current: target } = targetRef;\n\n    if (target) {\n      if (initialScrollBehaviorRef.current === 'auto') {\n        debug(() => [`%ctarget changed%c: Initial scroll`, ...styleConsole('blue')]);\n\n        target.scrollTop = mode === MODE_TOP ? 0 : target.scrollHeight - target.offsetHeight;\n        initialScrollBehaviorRef.current = false;\n\n        return;\n      }\n\n      // This is very similar to scrollToEnd().\n      // Instead of scrolling to end, it will call props.scroller() to determines how far it should scroll.\n      // This function could be called while it is auto-scrolling.\n\n      const { current: animateFrom } = animateFromRef;\n      const { offsetHeight, scrollHeight, scrollTop } = target;\n\n      const maxValue = mode === MODE_TOP ? 0 : Math.max(0, scrollHeight - offsetHeight - scrollTop);\n      const minValue = Math.max(0, animateFrom - scrollTop);\n\n      const rawNextValue = scroller({ maxValue, minValue, offsetHeight, scrollHeight, scrollTop });\n\n      const nextValue = Math.max(0, Math.min(maxValue, rawNextValue));\n\n      let nextAnimateTo;\n\n      if (mode === MODE_TOP || nextValue !== maxValue) {\n        nextAnimateTo = scrollTop + nextValue;\n      } else {\n        // When scrolling to bottom, we should scroll to \"100%\".\n        // Otherwise, if we scroll to any number, it will lose stickiness when elements are adding too fast.\n        // \"100%\" is a special argument intended to make sure stickiness is not lost while new elements are being added.\n        nextAnimateTo = '100%';\n      }\n\n      debug(() => [\n        [\n          `%cscrollToSticky%c: Will animate from %c${animateFrom}px%c to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c (%c${(nextAnimateTo === '100%' ? maxValue : nextAnimateTo) + animateFrom}px%c)`,\n          ...styleConsole('orange'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple')\n        ],\n        {\n          animateFrom,\n          maxValue,\n          minValue,\n          nextAnimateTo,\n          nextValue,\n          offsetHeight,\n          rawNextValue,\n          scrollHeight,\n          scrollTop\n        }\n      ]);\n\n      scrollTo(nextAnimateTo, { behavior: 'smooth' });\n    }\n  }, [animateFromRef, debug, mode, scroller, scrollTo, targetRef]);\n\n  const handleScroll = useCallback(\n    ({ timeStampLow }) => {\n      const { current: animateTo } = animateToRef;\n      const { current: target } = targetRef;\n\n      const animating = animateTo !== null;\n\n      // Currently, there are no reliable way to check if the \"scroll\" event is trigger due to\n      // user gesture, programmatic scrolling, or Chrome-synthesized \"scroll\" event to compensate size change.\n      // Thus, we use our best-effort to guess if it is triggered by user gesture, and disable sticky if it is heading towards the start direction.\n\n      if (timeStampLow <= ignoreScrollEventBeforeRef.current || !target) {\n        // Since we debounce \"scroll\" event, this handler might be called after spineTo.onEnd (a.k.a. artificial scrolling).\n        // We should ignore debounced event fired after scrollEnd, because without skipping them, the userInitiatedScroll calculated below will not be accurate.\n        // Thus, on a fast machine, adding elements super fast will lose the \"stickiness\".\n\n        return;\n      }\n\n      const { atBottom, atEnd, atStart, atTop } = computeViewState({ mode, target });\n\n      setAtBottom(atBottom);\n      setAtEnd(atEnd);\n      setAtStart(atStart);\n      setAtTop(atTop);\n\n      // Chrome will emit \"synthetic\" scroll event if the container is resized or an element is added\n      // We need to ignore these \"synthetic\" events\n      // Repro: In playground, press 4-1-5-1-1 (small, add one, normal, add one, add one)\n      //        Nomatter how fast or slow the sequence is being pressed, it should still stick to the bottom\n      const { offsetHeight: nextOffsetHeight, scrollHeight: nextScrollHeight } = target;\n      const { current: offsetHeight } = offsetHeightRef;\n      const { current: scrollHeight } = scrollHeightRef;\n      const offsetHeightChanged = nextOffsetHeight !== offsetHeight;\n      const scrollHeightChanged = nextScrollHeight !== scrollHeight;\n\n      if (offsetHeightChanged) {\n        offsetHeightRef.current = nextOffsetHeight;\n      }\n\n      if (scrollHeightChanged) {\n        scrollHeightRef.current = nextScrollHeight;\n      }\n\n      // Sticky means:\n      // - If it is scrolled programatically, we are still in sticky mode\n      // - If it is scrolled by the user, then sticky means if we are at the end\n\n      // Only update stickiness if the scroll event is not due to synthetic scroll done by Chrome\n      if (!offsetHeightChanged && !scrollHeightChanged) {\n        // We are sticky if we are animating to the end, or we are already at the end.\n        // We can be \"animating but not sticky\" by calling \"scrollTo(100)\" where the container scrollHeight is 200px.\n        const nextSticky = (animating && isEnd(animateTo, mode)) || atEnd;\n\n        if (stickyRef.current !== nextSticky) {\n          debug(() => [\n            [\n              `%conScroll%c: %csetSticky%c(%c${nextSticky}%c)`,\n              ...styleConsole('red'),\n              ...styleConsole('red'),\n              ...styleConsole('purple')\n            ],\n            [\n              `(animating = %c${animating}%c && isEnd = %c${isEnd(animateTo, mode)}%c) || atEnd = %c${atEnd}%c`,\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              {\n                animating,\n                animateTo,\n                atEnd,\n                mode,\n                offsetHeight: target.offsetHeight,\n                scrollHeight: target.scrollHeight,\n                sticky: stickyRef.current,\n                nextSticky\n              }\n            ]\n          ]);\n\n          setSticky(nextSticky);\n        }\n      } else if (stickyRef.current) {\n        debug(() => [\n          [\n            `%conScroll%c: Size changed while sticky, calling %cscrollToSticky()%c`,\n            ...styleConsole('red'),\n            ...styleConsole('orange'),\n            {\n              offsetHeightChanged,\n              scrollHeightChanged\n            }\n          ],\n          {\n            nextOffsetHeight,\n            prevOffsetHeight: offsetHeight,\n            nextScrollHeight,\n            prevScrollHeight: scrollHeight\n          }\n        ]);\n\n        scrollToSticky();\n      }\n\n      const { scrollTop: actualScrollTop } = target;\n\n      scrollPositionObserversRef.current.forEach(observer => observer({ scrollTop: actualScrollTop }));\n    },\n    [\n      animateToRef,\n      debug,\n      ignoreScrollEventBeforeRef,\n      mode,\n      offsetHeightRef,\n      scrollHeightRef,\n      scrollPositionObserversRef,\n      scrollToSticky,\n      setAtBottom,\n      setAtEnd,\n      setAtStart,\n      setAtTop,\n      setSticky,\n      stickyRef,\n      targetRef\n    ]\n  );\n\n  useEffect(() => {\n    if (target) {\n      let stickyButNotAtEndSince = false;\n\n      const timeout = setImmediateInterval(() => {\n        const { current: target } = targetRef;\n        const animating = animateToRef.current !== null;\n\n        if (stickyRef.current) {\n          if (!computeViewState({ mode, target }).atEnd) {\n            if (!stickyButNotAtEndSince) {\n              stickyButNotAtEndSince = Date.now();\n            } else if (Date.now() - stickyButNotAtEndSince > SCROLL_DECISION_DURATION) {\n              // Quirks: In Firefox, after user scroll down, Firefox do two things:\n              //         1. Set to a new \"scrollTop\"\n              //         2. Fire \"scroll\" event\n              //         For what we observed, #1 is fired about 20ms before #2. There is a chance that this stickyCheckTimeout is being scheduled between 1 and 2.\n              //         That means, if we just look at #1 to decide if we should scroll, we will always scroll, in oppose to the user's intention.\n              // Repro: Open Firefox, set checkInterval to a lower number, and try to scroll by dragging the scroll handler. It will jump back.\n\n              // The \"animating\" check will make sure stickiness is not lost when elements are adding at a very fast pace.\n              if (!animating) {\n                animateFromRef.current = target.scrollTop;\n\n                debug(() => [\n                  `%cInterval check%c: Should sticky but not at end, calling %cscrollToSticky()%c to scroll`,\n                  ...styleConsole('navy'),\n                  ...styleConsole('orange')\n                ]);\n\n                scrollToSticky();\n              }\n\n              stickyButNotAtEndSince = false;\n            }\n          } else {\n            stickyButNotAtEndSince = false;\n          }\n        } else if (target.scrollHeight <= target.offsetHeight && !stickyRef.current) {\n          // When the container is emptied, we will set sticky back to true.\n\n          debug(() => [\n            [\n              `%cInterval check%c: Container is emptied, setting sticky back to %ctrue%c`,\n              ...styleConsole('navy'),\n              ...styleConsole('purple')\n            ],\n            [\n              {\n                offsetHeight: target.offsetHeight,\n                scrollHeight: target.scrollHeight,\n                sticky: stickyRef.current\n              }\n            ]\n          ]);\n\n          setSticky(true);\n        }\n      }, Math.max(MIN_CHECK_INTERVAL, checkInterval) || MIN_CHECK_INTERVAL);\n\n      return () => clearInterval(timeout);\n    }\n  }, [animateToRef, checkInterval, debug, mode, scrollToSticky, setSticky, stickyRef, target, targetRef]);\n\n  const styleToClassName = useMemo(() => {\n    const emotion =\n      emotionPool[nonce] ||\n      (emotionPool[nonce] = createEmotion({ key: 'react-scroll-to-bottom--css-' + createCSSKey(), nonce }));\n\n    return style => emotion.css(style) + '';\n  }, [nonce]);\n\n  const internalContext = useMemo(\n    () => ({\n      observeScrollPosition,\n      setTarget,\n      styleToClassName\n    }),\n    [observeScrollPosition, setTarget, styleToClassName]\n  );\n\n  const state1Context = useMemo(\n    () => ({\n      atBottom,\n      atEnd,\n      atStart,\n      atTop,\n      mode\n    }),\n    [atBottom, atEnd, atStart, atTop, mode]\n  );\n\n  const state2Context = useMemo(() => {\n    const animating = animateTo !== null;\n\n    return {\n      animating,\n      animatingToEnd: animating && isEnd(animateTo, mode),\n      sticky\n    };\n  }, [animateTo, mode, sticky]);\n\n  const combinedStateContext = useMemo(\n    () => ({\n      ...state1Context,\n      ...state2Context\n    }),\n    [state1Context, state2Context]\n  );\n\n  const functionContext = useMemo(\n    () => ({\n      scrollTo,\n      scrollToBottom,\n      scrollToEnd,\n      scrollToStart,\n      scrollToTop\n    }),\n    [scrollTo, scrollToBottom, scrollToEnd, scrollToStart, scrollToTop]\n  );\n\n  useEffect(() => {\n    // We need to update the \"scrollHeight\" value to latest when the user do a focus inside the box.\n    //\n    // This is because:\n    // - In our code that mitigate Chrome synthetic scrolling, that code will look at whether \"scrollHeight\" value is latest or not.\n    // - That code only run on \"scroll\" event.\n    // - That means, on every \"scroll\" event, if the \"scrollHeight\" value is not latest, we will skip modifying the stickiness.\n    // - That means, if the user \"focus\" to an element that cause the scroll view to scroll to the bottom, the user agent will fire \"scroll\" event.\n    //   Since the \"scrollHeight\" is not latest value, this \"scroll\" event will be ignored and stickiness will not be modified.\n    // - That means, if the user \"focus\" to a newly added element that is at the end of the scroll view, the \"scroll to bottom\" button will continue to show.\n    //\n    // Repro in Chrome:\n    // 1. Fill up a scroll view\n    // 2. Scroll up, the \"scroll to bottom\" button should show up\n    // 3. Click \"Add a button\"\n    // 4. Click on the scroll view (to pseudo-focus on it)\n    // 5. Press TAB, the scroll view will be at the bottom\n    //\n    // Expect:\n    // - The \"scroll to bottom\" button should be gone.\n    if (target) {\n      const handleFocus = () => {\n        scrollHeightRef.current = target.scrollHeight;\n      };\n\n      target.addEventListener('focus', handleFocus, { capture: true, passive: true });\n\n      return () => target.removeEventListener('focus', handleFocus);\n    }\n  }, [target]);\n\n  debug(() => [\n    [`%cRender%c: Render`, ...styleConsole('cyan', '')],\n    {\n      animateTo,\n      animating: animateTo !== null,\n      sticky,\n      target\n    }\n  ]);\n\n  return (\n    <InternalContext.Provider value={internalContext}>\n      <FunctionContext.Provider value={functionContext}>\n        <StateContext.Provider value={combinedStateContext}>\n          <State1Context.Provider value={state1Context}>\n            <State2Context.Provider value={state2Context}>\n              {children}\n              {target && <EventSpy debounce={debounce} name=\"scroll\" onEvent={handleScroll} target={target} />}\n              {target && animateTo !== null && (\n                <SpineTo name=\"scrollTop\" onEnd={handleSpineToEnd} target={target} value={animateTo} />\n              )}\n            </State2Context.Provider>\n          </State1Context.Provider>\n        </StateContext.Provider>\n      </FunctionContext.Provider>\n    </InternalContext.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  checkInterval: 100,\n  children: undefined,\n  debounce: 17,\n  debug: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scroller: DEFAULT_SCROLLER\n};\n\nComposer.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scroller: PropTypes.func\n};\n\nexport default Composer;\n","/* eslint no-magic-numbers: \"off\" */\n\nimport random from 'math-random';\n\nexport default function useCSSKey() {\n  return random()\n    .toString(26)\n    .substr(2, 5)\n    .replace(/\\d/gu, value => String.fromCharCode(value.charCodeAt(0) + 65));\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n\nimport InternalContext from './InternalContext';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  height: '100%',\n  overflowY: 'auto',\n  width: '100%'\n};\n\nconst Panel = ({ children, className }) => {\n  const { setTarget } = useContext(InternalContext);\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')} ref={setTarget}>\n      {children}\n    </div>\n  );\n};\n\nPanel.defaultProps = {\n  children: undefined,\n  className: undefined\n};\n\nPanel.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default Panel;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport Composer from './ScrollToBottom/Composer';\nimport Panel from './ScrollToBottom/Panel';\nimport useStyleToClassName from './hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  position: 'relative'\n};\n\nconst BasicScrollToBottomCore = ({ children, className, followButtonClassName, scrollViewClassName }) => {\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')}>\n      <Panel className={(scrollViewClassName || '') + ''}>{children}</Panel>\n      <AutoHideFollowButton className={(followButtonClassName || '') + ''} />\n    </div>\n  );\n};\n\nBasicScrollToBottomCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  followButtonClassName: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottomCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  followButtonClassName: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nconst BasicScrollToBottom = ({\n  checkInterval,\n  children,\n  className,\n  debounce,\n  debug,\n  followButtonClassName,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller,\n  scrollViewClassName\n}) => (\n  <Composer\n    checkInterval={checkInterval}\n    debounce={debounce}\n    debug={debug}\n    initialScrollBehavior={initialScrollBehavior}\n    mode={mode}\n    nonce={nonce}\n    scroller={scroller}\n  >\n    <BasicScrollToBottomCore\n      className={className}\n      followButtonClassName={followButtonClassName}\n      scrollViewClassName={scrollViewClassName}\n    >\n      {children}\n    </BasicScrollToBottomCore>\n  </Composer>\n);\n\nBasicScrollToBottom.defaultProps = {\n  checkInterval: undefined,\n  children: undefined,\n  className: undefined,\n  debounce: undefined,\n  debug: undefined,\n  followButtonClassName: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scroller: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottom.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  followButtonClassName: PropTypes.string,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scroller: PropTypes.func,\n  scrollViewClassName: PropTypes.string\n};\n\nexport default BasicScrollToBottom;\n","import addVersionToMetaTag from './addVersionToMetaTag';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport BasicScrollToBottom from './BasicScrollToBottom';\nimport Composer from './ScrollToBottom/Composer';\nimport FunctionContext from './ScrollToBottom/FunctionContext';\nimport Panel from './ScrollToBottom/Panel';\nimport StateContext from './ScrollToBottom/StateContext';\n\nimport useAnimating from './hooks/useAnimating';\nimport useAnimatingToEnd from './hooks/useAnimatingToEnd';\nimport useAtBottom from './hooks/useAtBottom';\nimport useAtEnd from './hooks/useAtEnd';\nimport useAtStart from './hooks/useAtStart';\nimport useAtTop from './hooks/useAtTop';\nimport useMode from './hooks/useMode';\nimport useObserveScrollPosition from './hooks/useObserveScrollPosition';\nimport useScrollTo from './hooks/useScrollTo';\nimport useScrollToBottom from './hooks/useScrollToBottom';\nimport useScrollToEnd from './hooks/useScrollToEnd';\nimport useScrollToStart from './hooks/useScrollToStart';\nimport useScrollToTop from './hooks/useScrollToTop';\nimport useSticky from './hooks/useSticky';\n\nexport default BasicScrollToBottom;\n\nexport {\n  AutoHideFollowButton,\n  Composer,\n  FunctionContext,\n  Panel,\n  StateContext,\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n};\n\naddVersionToMetaTag();\n","/* eslint no-magic-numbers: \"off\" */\n\nimport classNames from 'classnames';\nimport createEmotion from '@emotion/css/create-instance';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.command-bar': {\n    backgroundColor: '#FFF',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .command-bar__actions': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .command-bar__action': {\n      fontSize: 11,\n      height: 40,\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      }\n    }\n  }\n};\n\nconst CommandBar = ({ nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ key: 'playground--css-', nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n  const [options, setOptions] = useState({ behavior: 'smooth' });\n\n  const handleScrollTo100pxClick = useCallback(() => scrollTo(100, options), [options, scrollTo]);\n  const handleScrollToBottomClick = useCallback(() => scrollToBottom(options), [options, scrollToBottom]);\n  const handleScrollToEndClick = useCallback(() => scrollToEnd(options), [options, scrollToEnd]);\n  const handleScrollToStartClick = useCallback(() => scrollToStart(options), [options, scrollToStart]);\n  const handleScrollToTopClick = useCallback(() => scrollToTop(options), [options, scrollToTop]);\n  const handleSmoothChange = useCallback(\n    ({ target: { checked } }) => {\n      setOptions({ behavior: checked ? 'smooth' : 'auto' });\n    },\n    [setOptions]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'command-bar')}>\n      <ul className=\"command-bar__actions\">\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToBottomClick}>\n            Scroll to bottom\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToTopClick}>\n            Scroll to top\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToStartClick}>\n            Scroll to start\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToEndClick}>\n            Scroll to end\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollTo100pxClick}>\n            100px\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={options.behavior === 'smooth'} onChange={handleSmoothChange} type=\"checkbox\" />\n            Smooth\n          </label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar;\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollTo() {\n  const { scrollTo } = useFunctionContext();\n\n  return scrollTo;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToBottom() {\n  const { scrollToBottom } = useFunctionContext();\n\n  return scrollToBottom;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToStart() {\n  const { scrollToStart } = useFunctionContext();\n\n  return scrollToStart;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToTop() {\n  const { scrollToTop } = useFunctionContext();\n\n  return scrollToTop;\n}\n","import classNames from 'classnames';\nimport createEmotion from '@emotion/css/create-instance';\nimport React, { useMemo, useRef } from 'react';\n\nimport {\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useSticky\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.status-bar': {\n    backgroundColor: 'rgba(255, 255, 255, .5)',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .status-bar__badges': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .status-bar__badge': {\n      alignItems: 'center',\n      backgroundColor: '#DDD',\n      borderRadius: 5,\n      display: 'flex',\n      flex: 1,\n      fontFamily: 'Arial',\n      fontSize: '50%',\n      justifyContent: 'center',\n      padding: '2px 4px',\n      textAlign: 'center',\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      },\n\n      '&.status-bar__badge--lit': {\n        backgroundColor: 'Red',\n        color: 'White'\n      },\n\n      '&.status-bar__badge--lit-green': {\n        backgroundColor: 'Green',\n        color: 'White'\n      }\n    }\n  }\n};\n\nconst StatusBar = ({ className, nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ key: 'playground--css-', nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTopRef = useRef();\n  const [animating] = useAnimating();\n  const [animatingToEnd] = useAnimatingToEnd();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  useObserveScrollPosition(\n    ({ scrollTop }) => {\n      const { current } = scrollTopRef;\n\n      // We are directly writing to \"innerText\" for performance reason.\n      if (current) {\n        current.innerText = scrollTop + 'px';\n      }\n    },\n    [scrollTopRef]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'status-bar', className)}>\n      <ul className=\"status-bar__badges\">\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit-green': mode !== 'top' })}>\n          STICK TO BOTTOM\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animating })}>ANIMATING</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animatingToEnd })}>\n          ANIMATING TO END\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atBottom })}>AT BOTTOM</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atEnd })}>AT END</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atStart })}>AT START</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atTop })}>AT TOP</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': sticky })}>STICKY</li>\n        <li className={classNames('status-bar__badge')} ref={scrollTopRef}></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StatusBar;\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimating() {\n  const { animating } = useStateContext(2);\n\n  return [animating];\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimatingToEnd() {\n  const { animatingToEnd } = useStateContext(2);\n\n  return [animatingToEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtBottom() {\n  const { atBottom } = useStateContext(1);\n\n  return [atBottom];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtEnd() {\n  const { atEnd } = useStateContext(1);\n\n  return [atEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtStart() {\n  const { atStart } = useStateContext(1);\n\n  return [atStart];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtTop() {\n  const { atTop } = useStateContext(1);\n\n  return [atTop];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useMode() {\n  const { mode } = useStateContext(1);\n\n  return [mode];\n}\n","import { useEffect } from 'react';\n\nimport useInternalContext from './internal/useInternalContext';\n\nexport default function useObserveScrollPosition(observer, deps = []) {\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!Array.isArray(deps)) {\n    console.error(\n      'react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.'\n    );\n  }\n\n  const { observeScrollPosition } = useInternalContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeScrollPosition(observer), [...deps, !observer, observeScrollPosition]);\n}\n","/* eslint no-magic-numbers: \"off\" */\n\nimport { LoremIpsum, loremIpsum } from 'lorem-ipsum';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ReactScrollToBottom, { StateContext } from 'react-scroll-to-bottom';\n\nimport classNames from 'classnames';\nimport createEmotion from '@emotion/css/create-instance';\nimport Interval from 'react-interval';\n\nimport CommandBar from './CommandBar';\nimport StatusBar from './StatusBar';\n\nconst FADE_IN_ANIMATION_KEYFRAMES = {\n  '0%': { opacity: 0.2 },\n  '100%': { opacity: 1 }\n};\n\nconst ROOT_STYLE = {\n  '& > ul.button-bar': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n\n    '& > li:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .panes': {\n    display: 'flex',\n\n    '& > *': {\n      flex: 1\n    },\n\n    '& > *:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .version': {\n    bottom: 10,\n    position: 'absolute'\n  }\n};\n\nconst CONTAINER_STYLE = {\n  borderColor: 'Black',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10\n};\n\nconst LARGE_CONTAINER_STYLE = {\n  height: 600\n};\n\nconst SCROLL_VIEW_STYLE = {\n  backgroundColor: '#EEE'\n};\n\nconst SCROLL_VIEW_PADDING_STYLE = {\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  '&:not(.sticky)': {\n    backgroundColor: 'rgba(255, 0, 0, .1)'\n  }\n};\n\nconst SMALL_CONTAINER_STYLE = {\n  height: 300\n};\n\nconst STATUS_BAR_CSS = {\n  bottom: 0,\n  position: 'sticky'\n};\n\nconst createParagraphs = count => new Array(count).fill().map(() => loremIpsum({ units: 'paragraph' }));\n\nconst App = ({ nonce }) => {\n  const {\n    containerCSS,\n    largeContainerCSS,\n    rootCSS,\n    scrollViewCSS,\n    scrollViewPaddingCSS,\n    smallContainerCSS,\n    statusBarCSS\n  } = useMemo(() => {\n    const { css, keyframes } = createEmotion({ key: 'playground--css-', nonce });\n\n    return {\n      containerCSS: css(CONTAINER_STYLE),\n      largeContainerCSS: css(LARGE_CONTAINER_STYLE),\n      rootCSS: css(ROOT_STYLE),\n      scrollViewCSS: css(SCROLL_VIEW_STYLE),\n      scrollViewPaddingCSS: css({\n        ...SCROLL_VIEW_PADDING_STYLE,\n\n        '& > p': {\n          animation: `${keyframes(FADE_IN_ANIMATION_KEYFRAMES)} 500ms`\n        }\n      }),\n      smallContainerCSS: css(SMALL_CONTAINER_STYLE),\n      statusBarCSS: css(STATUS_BAR_CSS)\n    };\n  }, [nonce]);\n\n  const [containerSize, setContainerSize] = useState('');\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n  const [limitAutoScrollHeight, setLimitAutoScrollHeight] = useState(false);\n  const [loadedVersion] = useState(() =>\n    document.querySelector('head meta[name=\"react-scroll-to-bottom:version\"]').getAttribute('content')\n  );\n  const [disableScrollToBottomPanel, setDisableScrollToBottomPanel] = useState(false);\n  const [disableScrollToTopPanel, setDisableScrollToTopPanel] = useState(false);\n\n  const handleDisableScrollToBottomPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToBottomPanel(checked),\n    [setDisableScrollToBottomPanel]\n  );\n\n  const handleDisableScrollToTopPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToTopPanel(checked),\n    [setDisableScrollToTopPanel]\n  );\n\n  const handleAdd = useCallback(\n    count => setParagraphs([...paragraphs, ...createParagraphs(count)]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () => setParagraphs([...paragraphs, 'Button: ' + loremIpsum({ units: 'words' })]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAddSuccessively = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const nextParagraphs = [...paragraphs, lorem.generateSentences(1)];\n\n    setParagraphs(nextParagraphs);\n\n    requestAnimationFrame(() => setParagraphs([...nextParagraphs, lorem.generateParagraphs(5)]));\n  }, [paragraphs, setParagraphs]);\n  const handleAddAndRemove = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const [, ...nextParagraphs] = paragraphs;\n\n    nextParagraphs.push(lorem.generateParagraphs(1));\n\n    setParagraphs(nextParagraphs);\n  }, [paragraphs, setParagraphs]);\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(\n    ({ target: { checked } }) => setCommandBarVisible(checked),\n    [setCommandBarVisible]\n  );\n  const handleContainerSizeLarge = useCallback(() => setContainerSize('large'), [setContainerSize]);\n  const handleContainerSizeNormal = useCallback(() => setContainerSize(''), [setContainerSize]);\n  const handleContainerSizeSmall = useCallback(() => setContainerSize('small'), [setContainerSize]);\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) => setIntervalEnabled(intervalEnabled),\n    [setIntervalEnabled]\n  );\n  const handleLimitAutoScrollHeightChange = useCallback(\n    ({ target: { checked } }) => setLimitAutoScrollHeight(checked),\n    [setLimitAutoScrollHeight]\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        containerCSS + '',\n        containerSize === 'small' ? smallContainerCSS + '' : containerSize === 'large' ? largeContainerCSS + '' : ''\n      ),\n    [containerCSS, containerSize, largeContainerCSS, smallContainerCSS]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  const scroller = useCallback(() => 100, []);\n\n  return (\n    <div className={rootCSS + ''}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddSuccessively}\n            title='When combined with \"limit auto scroll\" checkbox, this button should pause auto-scroll.'\n          >\n            Add successively\n          </button>\n        </li>\n        <li>\n          <button onClick={handleAddAndRemove} title=\"Add a new paragraph and remove the first paragraph\">\n            Add and remove\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={intervalEnabled} onChange={handleIntervalEnabledChange} type=\"checkbox\" />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={commandBarVisible} onChange={handleCommandBarVisibleChange} type=\"checkbox\" />\n            Show command bar\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={limitAutoScrollHeight} onChange={handleLimitAutoScrollHeightChange} type=\"checkbox\" />\n            Limit auto scroll height to 100px\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <div>\n          {disableScrollToBottomPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n              scrollViewClassName={scrollViewCSS + ''}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {paragraphs.map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input\n              checked={disableScrollToBottomPanel}\n              onChange={handleDisableScrollToBottomPanelClick}\n              type=\"checkbox\"\n            />\n            Disable this panel\n          </label>\n        </div>\n        <div>\n          {disableScrollToTopPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              mode=\"top\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {[...paragraphs].reverse().map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input checked={disableScrollToTopPanel} onChange={handleDisableScrollToTopPanelClick} type=\"checkbox\" />\n            Disable this panel\n          </label>\n        </div>\n      </div>\n      <div className=\"version\">\n        <code>react-scroll-to-bottom@{loadedVersion}</code> has loaded.\n      </div>\n      {intervalEnabled && <Interval callback={handleAdd1} enabled={true} timeout={1000} />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App nonce=\"a1b2c3d\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}