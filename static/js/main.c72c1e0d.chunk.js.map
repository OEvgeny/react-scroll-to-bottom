{"version":3,"sources":["../../src/index.js","../../../../src/hooks/internal/useStateContext.js","../../../../src/hooks/internal/useFunctionContext.js","../../../src/ScrollToBottom/FunctionContext.js","../../../src/ScrollToBottom/StateContext.js","../../../../src/hooks/internal/useStyleToClassName.js","../../../src/ScrollToBottom/InternalContext.js","../../../src/ScrollToBottom/AutoHideFollowButton.js","../../../src/hooks/useScrollToEnd.js","../../../src/hooks/useSticky.js","../../../src/ScrollToBottom/State1Context.js","../../../src/ScrollToBottom/State2Context.js","../../../../src/hooks/internal/useInternalContext.js","../../../src/ScrollToBottom/Composer.js","../../../src/utils/styleConsole.js","../../../src/ScrollToBottom/Panel.js","../../src/addVersionToMetaTag.js","../../src/BasicScrollToBottom.js","../../src/createCSSKey.js","../../../src/utils/debug.js","../../src/EventSpy.js","../../src/debounce.js","../../src/SpineTo.js","../../../src/hooks/useAnimating.js","../../../src/hooks/useAnimatingToEnd.js","../../../src/hooks/useAtBottom.js","../../../src/hooks/useAtEnd.js","../../../src/hooks/useAtStart.js","../../../src/hooks/useAtTop.js","../../../src/hooks/useMode.js","../../../src/hooks/useObserveScrollPosition.js","../../../src/hooks/useScrollTo.js","../../../src/hooks/useScrollToBottom.js","../../../src/hooks/useScrollToStart.js","../../../src/hooks/useScrollToTop.js","CommandBar.js","StatusBar.js","App.js","registerServiceWorker.js","index.js"],"names":["BasicScrollToBottom","tier","useContext","stateContexts","StateContext","State1Context","State2Context","FunctionContext","context","scrollTo","scrollToBottom","scrollToEnd","scrollToStart","scrollToTop","animating","animatingToEnd","atBottom","atEnd","atStart","atTop","mode","sticky","offsetHeight","scrollHeight","setTarget","styleToClassName","ROOT_STYLE","backgroundColor","borderRadius","borderWidth","bottom","cursor","height","outline","position","right","width","AutoHideFollowButton","children","className","rootCSS","onClick","type","PropTypes","string","InternalContext","emotionPool","computeViewState","target","scrollTop","isEnd","animateTo","Composer","checkInterval","debounce","debugFromProp","debug","initialScrollBehavior","nonce","scroller","useMemo","force","ignoreScrollEventBeforeRef","useRef","initialScrollBehaviorRef","useState","setAnimateTo","animateFromRef","offsetHeightRef","scrollHeightRef","setAtBottom","setAtEnd","setAtTop","setAtStart","setSticky","scrollPositionObserversRef","observeScrollPosition","useCallback","fn","scrollPositionObservers","index","handleSpineToEnd","Date","behavior","nextAnimateTo","console","options","scrollToSticky","animateFrom","maxValue","Math","minValue","rawNextValue","nextValue","handleScroll","timeStampLow","nextOffsetHeight","nextScrollHeight","offsetHeightChanged","scrollHeightChanged","prevOffsetHeight","prevScrollHeight","nextSticky","actualScrollTop","observer","useEffect","stickyButNotAtEndSince","timeout","ms","setInterval","clearInterval","emotion","key","style","internalContext","state1Context","state2Context","combinedStateContext","functionContext","handleFocus","capture","passive","value","name","onEvent","onEnd","func","color","styles","overflowY","Panel","ref","undefined","content","document","meta","encodeURI","err","setMetaTag","BasicScrollToBottomCore","followButtonClassName","scrollViewClassName","String","category","NODE_ENV","args","arg0","lines","Array","oneLiner","format","process","EventSpy","onEventRef","debouncer","event","current","handleEvent","useLayoutEffect","last","now","clearTimeout","setTimeout","squareStepper","to","sign","next","step","from","stepper","i","SpineTo","animator","animate","start","cancelAnimationFrame","requestAnimationFrame","toNumber","handleCancelAnimation","isRequired","deps","boxShadow","display","listStyleType","margin","padding","fontSize","marginLeft","CommandBar","createEmotion","css","useScrollTo","useScrollToBottom","useScrollToEnd","useScrollToStart","useScrollToTop","setOptions","handleScrollTo100pxClick","handleScrollToBottomClick","handleScrollToEndClick","handleScrollToStartClick","handleScrollToTopClick","handleSmoothChange","checked","classNames","onChange","alignItems","flex","fontFamily","justifyContent","textAlign","StatusBar","scrollTopRef","useAnimating","useAnimatingToEnd","useAtBottom","useAtEnd","useAtStart","useAtTop","useMode","useSticky","useObserveScrollPosition","innerText","FADE_IN_ANIMATION_KEYFRAMES","opacity","marginRight","CONTAINER_STYLE","borderColor","borderStyle","marginTop","LARGE_CONTAINER_STYLE","SCROLL_VIEW_STYLE","SCROLL_VIEW_PADDING_STYLE","paddingLeft","paddingRight","SMALL_CONTAINER_STYLE","STATUS_BAR_CSS","createParagraphs","count","fill","map","loremIpsum","units","App","keyframes","containerCSS","largeContainerCSS","scrollViewCSS","scrollViewPaddingCSS","animation","smallContainerCSS","statusBarCSS","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","limitAutoScrollHeight","setLimitAutoScrollHeight","querySelector","getAttribute","loadedVersion","disableScrollToBottomPanel","setDisableScrollToBottomPanel","disableScrollToTopPanel","setDisableScrollToTopPanel","handleDisableScrollToBottomPanelClick","handleDisableScrollToTopPanelClick","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleAddSuccessively","lorem","LoremIpsum","nextParagraphs","generateSentences","generateParagraphs","handleAddAndRemove","push","handleClear","handleCommandBarVisibleChange","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","handleLimitAutoScrollHeightChange","containerClassName","handleKeyDown","keyCode","window","location","reload","addEventListener","removeEventListener","title","Consumer","paragraph","startsWith","substr","reverse","callback","enabled","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","catch","error","ReactDOM","render","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c72c1e0d.chunk.js","sourcesContent":["import addVersionToMetaTag from './addVersionToMetaTag';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport BasicScrollToBottom from './BasicScrollToBottom';\nimport Composer from './ScrollToBottom/Composer';\nimport FunctionContext from './ScrollToBottom/FunctionContext';\nimport Panel from './ScrollToBottom/Panel';\nimport StateContext from './ScrollToBottom/StateContext';\n\nimport useAnimating from './hooks/useAnimating';\nimport useAnimatingToEnd from './hooks/useAnimatingToEnd';\nimport useAtBottom from './hooks/useAtBottom';\nimport useAtEnd from './hooks/useAtEnd';\nimport useAtStart from './hooks/useAtStart';\nimport useAtTop from './hooks/useAtTop';\nimport useMode from './hooks/useMode';\nimport useObserveScrollPosition from './hooks/useObserveScrollPosition';\nimport useScrollTo from './hooks/useScrollTo';\nimport useScrollToBottom from './hooks/useScrollToBottom';\nimport useScrollToEnd from './hooks/useScrollToEnd';\nimport useScrollToStart from './hooks/useScrollToStart';\nimport useScrollToTop from './hooks/useScrollToTop';\nimport useSticky from './hooks/useSticky';\n\nexport default BasicScrollToBottom;\n\nexport {\n  AutoHideFollowButton,\n  Composer,\n  FunctionContext,\n  Panel,\n  StateContext,\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n};\n\naddVersionToMetaTag();\n","import { useContext } from 'react';\n\nimport StateContext from '../../ScrollToBottom/StateContext';\nimport State1Context from '../../ScrollToBottom/State1Context';\nimport State2Context from '../../ScrollToBottom/State2Context';\n\nconst stateContexts = [StateContext, State1Context, State2Context];\n\nexport default function useStateContext(tier) {\n  return useContext(stateContexts[tier] || stateContexts[0]);\n}\n","import { useContext } from 'react';\n\nimport FunctionContext from '../../ScrollToBottom/FunctionContext';\n\nexport default function useFunctionContext() {\n  return useContext(FunctionContext);\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  scrollTo: () => 0,\n  scrollToBottom: () => 0,\n  scrollToEnd: () => 0,\n  scrollToStart: () => 0,\n  scrollToTop: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomFunctionContext';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom',\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomStateContext';\n\nexport default context;\n","import useInternalContext from './useInternalContext';\n\nexport default function useStyleToClassName() {\n  const { styleToClassName } = useInternalContext();\n\n  return styleToClassName;\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  offsetHeight: 0,\n  scrollHeight: 0,\n  setTarget: () => 0,\n  styleToClassName: () => ''\n});\n\ncontext.displayName = 'ScrollToBottomInternalContext';\n\nexport default context;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useSticky from '../hooks/useSticky';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  backgroundColor: 'rgba(0, 0, 0, .2)',\n  borderRadius: 10,\n  borderWidth: 0,\n  bottom: 5,\n  cursor: 'pointer',\n  height: 20,\n  outline: 0,\n  position: 'absolute',\n  right: 20,\n  width: 20,\n\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n\n  '&:active': {\n    backgroundColor: 'rgba(0, 0, 0, .6)'\n  }\n};\n\nconst AutoHideFollowButton = ({ children, className }) => {\n  const [sticky] = useSticky();\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n  const scrollToEnd = useScrollToEnd();\n\n  return (\n    !sticky && (\n      <button className={classNames(rootCSS, (className || '') + '')} onClick={scrollToEnd} type=\"button\">\n        {children}\n      </button>\n    )\n  );\n};\n\nAutoHideFollowButton.defaultProps = {\n  children: undefined,\n  className: ''\n};\n\nAutoHideFollowButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default AutoHideFollowButton;\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToEnd() {\n  const { scrollToEnd } = useFunctionContext();\n\n  return scrollToEnd;\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useSticky() {\n  const { sticky } = useStateContext(2);\n\n  return [sticky];\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom'\n});\n\ncontext.displayName = 'ScrollToBottomState1Context';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomState2Context';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport InternalContext from '../../ScrollToBottom/InternalContext';\n\nexport default function useInternalContext() {\n  return useContext(InternalContext);\n}\n","import createEmotion from 'create-emotion';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport createCSSKey from '../createCSSKey';\nimport createDebug from '../utils/debug';\nimport EventSpy from '../EventSpy';\nimport FunctionContext from './FunctionContext';\nimport InternalContext from './InternalContext';\nimport SpineTo from '../SpineTo';\nimport State1Context from './State1Context';\nimport State2Context from './State2Context';\nimport StateContext from './StateContext';\nimport styleConsole from '../utils/styleConsole';\n\nconst DEFAULT_SCROLLER = () => Infinity;\nconst MIN_CHECK_INTERVAL = 17; // 1 frame\nconst MODE_BOTTOM = 'bottom';\nconst MODE_TOP = 'top';\nconst NEAR_END_THRESHOLD = 1;\nconst SCROLL_DECISION_DURATION = 34; // 2 frames\n\n// We pool the emotion object by nonce.\n// This is to make sure we don't generate too many unneeded <style> tags.\nconst emotionPool = {};\n\nfunction setImmediateInterval(fn, ms) {\n  fn();\n\n  return setInterval(fn, ms);\n}\n\nfunction computeViewState({ mode, target: { offsetHeight, scrollHeight, scrollTop } }) {\n  const atBottom = scrollHeight - scrollTop - offsetHeight < NEAR_END_THRESHOLD;\n  const atTop = scrollTop < NEAR_END_THRESHOLD;\n\n  const atEnd = mode === MODE_TOP ? atTop : atBottom;\n  const atStart = mode !== MODE_TOP ? atTop : atBottom;\n\n  return {\n    atBottom,\n    atEnd,\n    atStart,\n    atTop\n  };\n}\n\nfunction isEnd(animateTo, mode) {\n  return animateTo === (mode === MODE_TOP ? 0 : '100%');\n}\n\nconst Composer = ({\n  checkInterval,\n  children,\n  debounce,\n  debug: debugFromProp,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller\n}) => {\n  const debug = useMemo(() => createDebug(`<ScrollToBottom>`, { force: debugFromProp }), [debugFromProp]);\n\n  mode = mode === MODE_TOP ? MODE_TOP : MODE_BOTTOM;\n\n  const ignoreScrollEventBeforeRef = useRef(0);\n  const initialScrollBehaviorRef = useRef(initialScrollBehavior);\n  const [animateTo, setAnimateTo] = useState(mode === MODE_TOP ? 0 : '100%');\n  const [target, setTarget] = useState(null);\n\n  // Internal context\n  const animateFromRef = useRef(0);\n  const offsetHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n\n  // State context\n  const animating = animateTo !== null;\n  const [atBottom, setAtBottom] = useState(true);\n  const [atEnd, setAtEnd] = useState(true);\n  const [atTop, setAtTop] = useState(true);\n  const [atStart, setAtStart] = useState(false);\n  const [sticky, setSticky] = useState(true);\n\n  // High-rate state context\n  const scrollPositionObserversRef = useRef([]);\n  const observeScrollPosition = useCallback(\n    fn => {\n      scrollPositionObserversRef.current.push(fn);\n      target && fn({ scrollTop: target.scrollTop });\n\n      return () => {\n        const { current: scrollPositionObservers } = scrollPositionObserversRef;\n        const index = scrollPositionObservers.indexOf(fn);\n\n        ~index && scrollPositionObservers.splice(index, 1);\n      };\n    },\n    [scrollPositionObserversRef, target]\n  );\n\n  const handleSpineToEnd = useCallback(() => {\n    debug(() => [\n      '%cSpineTo%c: %conEnd%c is fired.',\n      ...styleConsole('magenta'),\n      ...styleConsole('orange'),\n      { animateTo }\n    ]);\n\n    ignoreScrollEventBeforeRef.current = Date.now();\n\n    // handleScrollEnd may end at a position which should lose stickiness.\n    // In that case, we will need to set sticky to false to stop the interval check.\n    // Test case:\n    // 1. Add a scroller that always return 0\n    // 2. Show a panel with mode === MODE_BOTTOM\n    // 3. Programmatically scroll to 0 (set element.scrollTop = 0)\n    // Expected: it should not repetitively call scrollTo(0)\n    //           it should set stickiness to false\n\n    isEnd(animateTo, mode) || setSticky(false);\n    setAnimateTo(null);\n  }, [animateTo, debug, ignoreScrollEventBeforeRef, mode, setAnimateTo, setSticky]);\n\n  // Function context\n  const scrollTo = useCallback(\n    (nextAnimateTo, { behavior } = {}) => {\n      if (typeof nextAnimateTo !== 'number' && nextAnimateTo !== '100%') {\n        return console.warn('react-scroll-to-bottom: Arguments passed to scrollTo() must be either number or \"100%\".');\n      }\n\n      // If it is trying to scroll to a position which is not \"atEnd\", it should set sticky to false after scroll ended.\n\n      debug(() => [\n        [\n          `%cscrollTo%c: Will scroll to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c`,\n          ...styleConsole('lime', ''),\n          ...styleConsole('purple')\n        ],\n        {\n          behavior,\n          nextAnimateTo,\n          target\n        }\n      ]);\n\n      if (behavior === 'auto') {\n        // Stop any existing animation\n        handleSpineToEnd();\n\n        if (target) {\n          // Jump to the scroll position\n          target.scrollTop = nextAnimateTo === '100%' ? target.scrollHeight - target.offsetHeight : nextAnimateTo;\n        }\n      } else {\n        behavior !== 'smooth' &&\n          console.warn(\n            'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollTo\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n          );\n\n        setAnimateTo(nextAnimateTo);\n      }\n\n      // This is for handling a case. When calling scrollTo('100%', { behavior: 'auto' }) multiple times, it would lose stickiness.\n      isEnd(nextAnimateTo, mode) && setSticky(true);\n    },\n    [debug, handleSpineToEnd, mode, setAnimateTo, setSticky, target]\n  );\n\n  const scrollToBottom = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToBottom%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToBottom\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo('100%', { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToTop = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToTop%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToTop\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo(0, { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToEnd = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToEnd%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToEnd\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToTop(options) : scrollToBottom(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToStart = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToStart%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToStart\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToBottom(options) : scrollToTop(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToSticky = useCallback(() => {\n    if (target) {\n      if (initialScrollBehaviorRef.current === 'auto') {\n        debug(() => [`%ctarget changed%c: Initial scroll`, ...styleConsole('blue')]);\n\n        target.scrollTop = mode === MODE_TOP ? 0 : target.scrollHeight - target.offsetHeight;\n        initialScrollBehaviorRef.current = false;\n\n        return;\n      }\n\n      // This is very similar to scrollToEnd().\n      // Instead of scrolling to end, it will call props.scroller() to determines how far it should scroll.\n      // This function could be called while it is auto-scrolling.\n\n      const { current: animateFrom } = animateFromRef;\n      const { offsetHeight, scrollHeight, scrollTop } = target;\n\n      const maxValue = mode === MODE_TOP ? 0 : Math.max(0, scrollHeight - offsetHeight - scrollTop);\n      const minValue = Math.max(0, animateFrom - scrollTop);\n\n      const rawNextValue = scroller({ maxValue, minValue, offsetHeight, scrollHeight, scrollTop });\n\n      const nextValue = Math.max(0, Math.min(maxValue, rawNextValue));\n\n      let nextAnimateTo;\n\n      if (mode === MODE_TOP || nextValue !== maxValue) {\n        nextAnimateTo = scrollTop + nextValue;\n      } else {\n        // When scrolling to bottom, we should scroll to \"100%\".\n        // Otherwise, if we scroll to any number, it will lose stickiness when elements are adding too fast.\n        // \"100%\" is a special argument intended to make sure stickiness is not lost while new elements are being added.\n        nextAnimateTo = '100%';\n      }\n\n      debug(() => [\n        [\n          `%cscrollToSticky%c: Will animate from %c${animateFrom}px%c to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c (%c${(nextAnimateTo === '100%' ? maxValue : nextAnimateTo) + animateFrom}px%c)`,\n          ...styleConsole('orange'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple')\n        ],\n        {\n          animateFrom,\n          maxValue,\n          minValue,\n          nextAnimateTo,\n          nextValue,\n          offsetHeight,\n          rawNextValue,\n          scrollHeight,\n          scrollTop\n        }\n      ]);\n\n      scrollTo(nextAnimateTo, { behavior: 'smooth' });\n    }\n  }, [animateFromRef, debug, mode, scroller, scrollTo, target]);\n\n  const handleScroll = useCallback(\n    ({ timeStampLow }) => {\n      // Currently, there are no reliable way to check if the \"scroll\" event is trigger due to\n      // user gesture, programmatic scrolling, or Chrome-synthesized \"scroll\" event to compensate size change.\n      // Thus, we use our best-effort to guess if it is triggered by user gesture, and disable sticky if it is heading towards the start direction.\n\n      if (timeStampLow <= ignoreScrollEventBeforeRef.current || !target) {\n        // Since we debounce \"scroll\" event, this handler might be called after spineTo.onEnd (a.k.a. artificial scrolling).\n        // We should ignore debounced event fired after scrollEnd, because without skipping them, the userInitiatedScroll calculated below will not be accurate.\n        // Thus, on a fast machine, adding elements super fast will lose the \"stickiness\".\n\n        return;\n      }\n\n      const { atBottom, atEnd, atStart, atTop } = computeViewState({ mode, target });\n\n      setAtBottom(atBottom);\n      setAtEnd(atEnd);\n      setAtStart(atStart);\n      setAtTop(atTop);\n\n      // Chrome will emit \"synthetic\" scroll event if the container is resized or an element is added\n      // We need to ignore these \"synthetic\" events\n      // Repro: In playground, press 4-1-5-1-1 (small, add one, normal, add one, add one)\n      //        Nomatter how fast or slow the sequence is being pressed, it should still stick to the bottom\n      const { offsetHeight: nextOffsetHeight, scrollHeight: nextScrollHeight } = target;\n      const { current: offsetHeight } = offsetHeightRef;\n      const { current: scrollHeight } = scrollHeightRef;\n      const offsetHeightChanged = nextOffsetHeight !== offsetHeight;\n      const scrollHeightChanged = nextScrollHeight !== scrollHeight;\n\n      if (offsetHeightChanged) {\n        offsetHeightRef.current = nextOffsetHeight;\n      }\n\n      if (scrollHeightChanged) {\n        scrollHeightRef.current = nextScrollHeight;\n      }\n\n      // Sticky means:\n      // - If it is scrolled programatically, we are still in sticky mode\n      // - If it is scrolled by the user, then sticky means if we are at the end\n\n      // Only update stickiness if the scroll event is not due to synthetic scroll done by Chrome\n      if (!offsetHeightChanged && !scrollHeightChanged) {\n        // We are sticky if we are animating to the end, or we are already at the end.\n        // We can be \"animating but not sticky\" by calling \"scrollTo(100)\" where the container scrollHeight is 200px.\n        const nextSticky = (animating && isEnd(animateTo, mode)) || atEnd;\n\n        if (sticky !== nextSticky) {\n          debug(() => [\n            [\n              `%conScroll%c: %csetSticky%c(%c${nextSticky}%c)`,\n              ...styleConsole('red'),\n              ...styleConsole('red'),\n              ...styleConsole('purple')\n            ],\n            [\n              `(animating = %c${animating}%c && isEnd = %c${isEnd(animateTo, mode)}%c) || atEnd = %c${atEnd}%c`,\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              {\n                animating,\n                animateTo,\n                atEnd,\n                mode,\n                offsetHeight: target.offsetHeight,\n                scrollHeight: target.scrollHeight,\n                sticky,\n                nextSticky\n              }\n            ]\n          ]);\n\n          setSticky(nextSticky);\n        }\n      } else if (sticky) {\n        debug(() => [\n          [\n            `%conScroll%c: Size changed while sticky, calling %cscrollToSticky()%c`,\n            ...styleConsole('red'),\n            ...styleConsole('orange'),\n            {\n              offsetHeightChanged,\n              scrollHeightChanged\n            }\n          ],\n          {\n            nextOffsetHeight,\n            prevOffsetHeight: offsetHeight,\n            nextScrollHeight,\n            prevScrollHeight: scrollHeight\n          }\n        ]);\n\n        scrollToSticky();\n      }\n\n      const { scrollTop: actualScrollTop } = target;\n\n      scrollPositionObserversRef.current.forEach(observer => observer({ scrollTop: actualScrollTop }));\n    },\n    [\n      animateTo,\n      animating,\n      debug,\n      ignoreScrollEventBeforeRef,\n      mode,\n      offsetHeightRef,\n      scrollHeightRef,\n      scrollPositionObserversRef,\n      scrollToSticky,\n      setAtBottom,\n      setAtEnd,\n      setAtStart,\n      setAtTop,\n      setSticky,\n      sticky,\n      target\n    ]\n  );\n\n  useEffect(() => {\n    if (target) {\n      let stickyButNotAtEndSince = false;\n\n      const timeout = setImmediateInterval(() => {\n        if (sticky) {\n          if (!computeViewState({ mode, target }).atEnd) {\n            if (!stickyButNotAtEndSince) {\n              stickyButNotAtEndSince = Date.now();\n            } else if (Date.now() - stickyButNotAtEndSince > SCROLL_DECISION_DURATION) {\n              // Quirks: In Firefox, after user scroll down, Firefox do two things:\n              //         1. Set to a new \"scrollTop\"\n              //         2. Fire \"scroll\" event\n              //         For what we observed, #1 is fired about 20ms before #2. There is a chance that this stickyCheckTimeout is being scheduled between 1 and 2.\n              //         That means, if we just look at #1 to decide if we should scroll, we will always scroll, in oppose to the user's intention.\n              // Repro: Open Firefox, set checkInterval to a lower number, and try to scroll by dragging the scroll handler. It will jump back.\n\n              // The \"animating\" check will make sure stickiness is not lost when elements are adding at a very fast pace.\n              if (!animating) {\n                animateFromRef.current = target.scrollTop;\n\n                debug(() => [\n                  `%cInterval check%c: Should sticky but not at end, calling %cscrollToSticky()%c to scroll`,\n                  ...styleConsole('navy'),\n                  ...styleConsole('orange')\n                ]);\n\n                scrollToSticky();\n              }\n\n              stickyButNotAtEndSince = false;\n            }\n          } else {\n            stickyButNotAtEndSince = false;\n          }\n        } else if (target.scrollHeight <= target.offsetHeight && !sticky) {\n          // When the container is emptied, we will set sticky back to true.\n\n          setSticky(true);\n        }\n      }, Math.max(MIN_CHECK_INTERVAL, checkInterval) || MIN_CHECK_INTERVAL);\n\n      return () => clearInterval(timeout);\n    }\n  }, [animating, checkInterval, debug, mode, scrollToSticky, setSticky, sticky, target]);\n\n  const styleToClassName = useMemo(() => {\n    const emotion =\n      emotionPool[nonce] ||\n      (emotionPool[nonce] = createEmotion({ key: 'react-scroll-to-bottom--css-' + createCSSKey(), nonce }));\n\n    return style => emotion.css(style) + '';\n  }, [nonce]);\n\n  const internalContext = useMemo(\n    () => ({\n      observeScrollPosition,\n      setTarget,\n      styleToClassName\n    }),\n    [observeScrollPosition, setTarget, styleToClassName]\n  );\n\n  const state1Context = useMemo(\n    () => ({\n      atBottom,\n      atEnd,\n      atStart,\n      atTop,\n      mode\n    }),\n    [atBottom, atEnd, atStart, atTop, mode]\n  );\n\n  const state2Context = useMemo(\n    () => ({\n      animating,\n      animatingToEnd: animating && isEnd(animateTo, mode),\n      sticky\n    }),\n    [animating, animateTo, debug, mode, sticky]\n  );\n\n  const combinedStateContext = useMemo(\n    () => ({\n      ...state1Context,\n      ...state2Context\n    }),\n    [state1Context, state2Context]\n  );\n\n  const functionContext = useMemo(\n    () => ({\n      scrollTo,\n      scrollToBottom,\n      scrollToEnd,\n      scrollToStart,\n      scrollToTop\n    }),\n    [scrollTo, scrollToBottom, scrollToEnd, scrollToStart, scrollToTop]\n  );\n\n  useEffect(() => {\n    // We need to update the \"scrollHeight\" value to latest when the user do a focus inside the box.\n    //\n    // This is because:\n    // - In our code that mitigate Chrome synthetic scrolling, that code will look at whether \"scrollHeight\" value is latest or not.\n    // - That code only run on \"scroll\" event.\n    // - That means, on every \"scroll\" event, if the \"scrollHeight\" value is not latest, we will skip modifying the stickiness.\n    // - That means, if the user \"focus\" to an element that cause the scroll view to scroll to the bottom, the user agent will fire \"scroll\" event.\n    //   Since the \"scrollHeight\" is not latest value, this \"scroll\" event will be ignored and stickiness will not be modified.\n    // - That means, if the user \"focus\" to a newly added element that is at the end of the scroll view, the \"scroll to bottom\" button will continue to show.\n    //\n    // Repro in Chrome:\n    // 1. Fill up a scroll view\n    // 2. Scroll up, the \"scroll to bottom\" button should show up\n    // 3. Click \"Add a button\"\n    // 4. Click on the scroll view (to pseudo-focus on it)\n    // 5. Press TAB, the scroll view will be at the bottom\n    //\n    // Expect:\n    // - The \"scroll to bottom\" button should be gone.\n    if (target) {\n      const handleFocus = () => {\n        scrollHeightRef.current = target.scrollHeight;\n      };\n\n      target.addEventListener('focus', handleFocus, { capture: true, passive: true });\n\n      return () => target.removeEventListener('focus', handleFocus);\n    }\n  }, [target]);\n\n  debug(() => [\n    [`%cRender%c: Render`, ...styleConsole('cyan', '')],\n    {\n      animateTo,\n      animating,\n      sticky,\n      target\n    }\n  ]);\n\n  return (\n    <InternalContext.Provider value={internalContext}>\n      <FunctionContext.Provider value={functionContext}>\n        <StateContext.Provider value={combinedStateContext}>\n          <State1Context.Provider value={state1Context}>\n            <State2Context.Provider value={state2Context}>\n              {children}\n              {target && <EventSpy debounce={debounce} name=\"scroll\" onEvent={handleScroll} target={target} />}\n              {target && animateTo !== null && (\n                <SpineTo name=\"scrollTop\" onEnd={handleSpineToEnd} target={target} value={animateTo} />\n              )}\n            </State2Context.Provider>\n          </State1Context.Provider>\n        </StateContext.Provider>\n      </FunctionContext.Provider>\n    </InternalContext.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  checkInterval: 100,\n  children: undefined,\n  debounce: 17,\n  debug: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scroller: DEFAULT_SCROLLER\n};\n\nComposer.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scroller: PropTypes.func\n};\n\nexport default Composer;\n","export default function styleConsole(backgroundColor, color = 'white') {\n  let styles = `background-color: ${backgroundColor}; border-radius: 4px; padding: 2px 4px;`;\n\n  if (color) {\n    styles += ` color: ${color};`;\n  }\n\n  return [styles, ''];\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n\nimport InternalContext from './InternalContext';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  height: '100%',\n  overflowY: 'auto',\n  width: '100%'\n};\n\nconst Panel = ({ children, className }) => {\n  const { setTarget } = useContext(InternalContext);\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')} ref={setTarget}>\n      {children}\n    </div>\n  );\n};\n\nPanel.defaultProps = {\n  children: undefined,\n  className: undefined\n};\n\nPanel.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default Panel;\n","/* global global:readonly, process:readonly */\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nfunction setMetaTag(name, content) {\n  try {\n    const { document } = global;\n\n    if (typeof document !== 'undefined' && document.createElement && document.head && document.head.appendChild) {\n      const meta = document.querySelector(`html meta[name=\"${encodeURI(name)}\"]`) || document.createElement('meta');\n\n      meta.setAttribute('name', name);\n      meta.setAttribute('content', content);\n\n      document.head.appendChild(meta);\n    }\n  } catch (err) {}\n}\n\nexport default function addVersionToMetaTag() {\n  setMetaTag('react-scroll-to-bottom:version', process.env.npm_package_version);\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport Composer from './ScrollToBottom/Composer';\nimport Panel from './ScrollToBottom/Panel';\nimport useStyleToClassName from './hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  position: 'relative'\n};\n\nconst BasicScrollToBottomCore = ({ children, className, followButtonClassName, scrollViewClassName }) => {\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')}>\n      <Panel className={(scrollViewClassName || '') + ''}>{children}</Panel>\n      <AutoHideFollowButton className={(followButtonClassName || '') + ''} />\n    </div>\n  );\n};\n\nBasicScrollToBottomCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  followButtonClassName: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottomCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  followButtonClassName: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nconst BasicScrollToBottom = ({\n  checkInterval,\n  children,\n  className,\n  debounce,\n  debug,\n  followButtonClassName,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller,\n  scrollViewClassName\n}) => {\n  return (\n    <Composer\n      checkInterval={checkInterval}\n      debounce={debounce}\n      debug={debug}\n      initialScrollBehavior={initialScrollBehavior}\n      mode={mode}\n      nonce={nonce}\n      scroller={scroller}\n    >\n      <BasicScrollToBottomCore\n        className={className}\n        followButtonClassName={followButtonClassName}\n        scrollViewClassName={scrollViewClassName}\n      >\n        {children}\n      </BasicScrollToBottomCore>\n    </Composer>\n  );\n};\n\nBasicScrollToBottom.defaultProps = {\n  checkInterval: undefined,\n  children: undefined,\n  className: undefined,\n  debounce: undefined,\n  debug: undefined,\n  followButtonClassName: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottom.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  followButtonClassName: PropTypes.string,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nexport default BasicScrollToBottom;\n","import random from 'math-random';\n\nexport default function useCSSKey() {\n  return random()\n    .toString(26)\n    .substr(2, 5)\n    .replace(/\\d/g, value => String.fromCharCode(value.charCodeAt(0) + 65));\n}\n","/* eslint no-console: [\"off\"] */\n/* global process */\n\nimport styleConsole from './styleConsole';\n\nconst { NODE_ENV } = (process && process.env) || {};\n\nfunction format(category, arg0, ...args) {\n  return [`%c${category}%c ${arg0}`, ...styleConsole('green', 'white'), ...args];\n}\n\nexport default function debug(category, { force = NODE_ENV === 'development' } = {}) {\n  if (!force) {\n    return () => 0;\n  }\n\n  return (...args) => {\n    if (!args.length) {\n      return;\n    }\n\n    const [arg0] = args;\n\n    if (typeof arg0 === 'function') {\n      args = arg0();\n    }\n\n    const lines = Array.isArray(args[0]) ? args : [args];\n    const oneLiner = lines.length === 1;\n\n    lines.forEach((line, index) => {\n      if (oneLiner) {\n        console.log(...format(category, ...line));\n      } else if (index) {\n        console.log(...(Array.isArray(line) ? line : [line]));\n      } else {\n        console.groupCollapsed(...format(category, ...line));\n      }\n    });\n\n    oneLiner || console.groupEnd();\n  };\n}\n","import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n","export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n      target.addEventListener('wheel', handleCancelAnimation, { passive: true });\n\n      return () => {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return () => cancelAnimationFrame(animator.current);\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimating() {\n  const { animating } = useStateContext(2);\n\n  return [animating];\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimatingToEnd() {\n  const { animatingToEnd } = useStateContext(2);\n\n  return [animatingToEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtBottom() {\n  const { atBottom } = useStateContext(1);\n\n  return [atBottom];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtEnd() {\n  const { atEnd } = useStateContext(1);\n\n  return [atEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtStart() {\n  const { atStart } = useStateContext(1);\n\n  return [atStart];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtTop() {\n  const { atTop } = useStateContext(1);\n\n  return [atTop];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useMode() {\n  const { mode } = useStateContext(1);\n\n  return [mode];\n}\n","import { useEffect } from 'react';\n\nimport useInternalContext from './internal/useInternalContext';\n\nexport default function useObserveScrollPosition(observer, deps = []) {\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!Array.isArray(deps)) {\n    console.error(\n      'react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.'\n    );\n  }\n\n  const { observeScrollPosition } = useInternalContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeScrollPosition(observer), [...deps, observeScrollPosition]);\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollTo() {\n  const { scrollTo } = useFunctionContext();\n\n  return scrollTo;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToBottom() {\n  const { scrollToBottom } = useFunctionContext();\n\n  return scrollToBottom;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToStart() {\n  const { scrollToStart } = useFunctionContext();\n\n  return scrollToStart;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToTop() {\n  const { scrollToTop } = useFunctionContext();\n\n  return scrollToTop;\n}\n","import classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.command-bar': {\n    backgroundColor: '#FFF',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .command-bar__actions': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .command-bar__action': {\n      fontSize: 11,\n      height: 40,\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      }\n    }\n  }\n};\n\nconst CommandBar = ({ nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n  const [options, setOptions] = useState({ behavior: 'smooth' });\n\n  const handleScrollTo100pxClick = useCallback(() => scrollTo(100, options), [options, scrollTo]);\n  const handleScrollToBottomClick = useCallback(() => scrollToBottom(options), [options, scrollToBottom]);\n  const handleScrollToEndClick = useCallback(() => scrollToEnd(options), [options, scrollToEnd]);\n  const handleScrollToStartClick = useCallback(() => scrollToStart(options), [options, scrollToStart]);\n  const handleScrollToTopClick = useCallback(() => scrollToTop(options), [options, scrollToTop]);\n  const handleSmoothChange = useCallback(\n    ({ target: { checked } }) => {\n      setOptions({ behavior: checked ? 'smooth' : 'auto' });\n    },\n    [setOptions]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'command-bar')}>\n      <ul className=\"command-bar__actions\">\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToBottomClick}>\n            Scroll to bottom\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToTopClick}>\n            Scroll to top\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToStartClick}>\n            Scroll to start\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToEndClick}>\n            Scroll to end\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollTo100pxClick}>\n            100px\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={options.behavior === 'smooth'} onChange={handleSmoothChange} type=\"checkbox\" />\n            Smooth\n          </label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar;\n","import classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport React, { useMemo, useRef } from 'react';\n\nimport {\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useSticky\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.status-bar': {\n    backgroundColor: 'rgba(255, 255, 255, .5)',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .status-bar__badges': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .status-bar__badge': {\n      alignItems: 'center',\n      backgroundColor: '#DDD',\n      borderRadius: 5,\n      display: 'flex',\n      flex: 1,\n      fontFamily: 'Arial',\n      fontSize: '50%',\n      justifyContent: 'center',\n      padding: '2px 4px',\n      textAlign: 'center',\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      },\n\n      '&.status-bar__badge--lit': {\n        backgroundColor: 'Red',\n        color: 'White'\n      },\n\n      '&.status-bar__badge--lit-green': {\n        backgroundColor: 'Green',\n        color: 'White'\n      }\n    }\n  }\n};\n\nconst StatusBar = ({ className, nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTopRef = useRef();\n  const [animating] = useAnimating();\n  const [animatingToEnd] = useAnimatingToEnd();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  useObserveScrollPosition(\n    ({ scrollTop }) => {\n      const { current } = scrollTopRef;\n\n      // We are directly writing to \"innerText\" for performance reason.\n      if (current) {\n        current.innerText = scrollTop + 'px';\n      }\n    },\n    [scrollTopRef]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'status-bar', className)}>\n      <ul className=\"status-bar__badges\">\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit-green': mode !== 'top' })}>\n          STICK TO BOTTOM\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animating })}>ANIMATING</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animatingToEnd })}>\n          ANIMATING TO END\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atBottom })}>AT BOTTOM</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atEnd })}>AT END</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atStart })}>AT START</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atTop })}>AT TOP</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': sticky })}>STICKY</li>\n        <li className={classNames('status-bar__badge')} ref={scrollTopRef}></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StatusBar;\n","import { LoremIpsum, loremIpsum } from 'lorem-ipsum';\nimport classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport Interval from 'react-interval';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ReactScrollToBottom, { StateContext } from 'react-scroll-to-bottom';\n\nimport CommandBar from './CommandBar';\nimport StatusBar from './StatusBar';\n\nconst FADE_IN_ANIMATION_KEYFRAMES = {\n  '0%': { opacity: 0.2 },\n  '100%': { opacity: 1 }\n};\n\nconst ROOT_STYLE = {\n  '& > ul.button-bar': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n\n    '& > li:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .panes': {\n    display: 'flex',\n\n    '& > *': {\n      flex: 1\n    },\n\n    '& > *:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .version': {\n    bottom: 10,\n    position: 'absolute'\n  }\n};\n\nconst CONTAINER_STYLE = {\n  borderColor: 'Black',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10\n};\n\nconst LARGE_CONTAINER_STYLE = {\n  height: 600\n};\n\nconst SCROLL_VIEW_STYLE = {\n  backgroundColor: '#EEE'\n};\n\nconst SCROLL_VIEW_PADDING_STYLE = {\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  '&:not(.sticky)': {\n    backgroundColor: 'rgba(255, 0, 0, .1)'\n  }\n};\n\nconst SMALL_CONTAINER_STYLE = {\n  height: 300\n};\n\nconst STATUS_BAR_CSS = {\n  bottom: 0,\n  position: 'sticky'\n};\n\nconst createParagraphs = count => new Array(count).fill().map(() => loremIpsum({ units: 'paragraph' }));\n\nconst App = ({ nonce }) => {\n  const {\n    containerCSS,\n    largeContainerCSS,\n    rootCSS,\n    scrollViewCSS,\n    scrollViewPaddingCSS,\n    smallContainerCSS,\n    statusBarCSS\n  } = useMemo(() => {\n    const { css, keyframes } = createEmotion({ nonce });\n\n    return {\n      containerCSS: css(CONTAINER_STYLE),\n      largeContainerCSS: css(LARGE_CONTAINER_STYLE),\n      rootCSS: css(ROOT_STYLE),\n      scrollViewCSS: css(SCROLL_VIEW_STYLE),\n      scrollViewPaddingCSS: css({\n        ...SCROLL_VIEW_PADDING_STYLE,\n\n        '& > p': {\n          animation: `${keyframes(FADE_IN_ANIMATION_KEYFRAMES)} 500ms`\n        }\n      }),\n      smallContainerCSS: css(SMALL_CONTAINER_STYLE),\n      statusBarCSS: css(STATUS_BAR_CSS)\n    };\n  }, [nonce]);\n\n  const [containerSize, setContainerSize] = useState('');\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n  const [limitAutoScrollHeight, setLimitAutoScrollHeight] = useState(false);\n  const [loadedVersion] = useState(() =>\n    document.querySelector('head meta[name=\"react-scroll-to-bottom:version\"]').getAttribute('content')\n  );\n  const [disableScrollToBottomPanel, setDisableScrollToBottomPanel] = useState(false);\n  const [disableScrollToTopPanel, setDisableScrollToTopPanel] = useState(false);\n\n  const handleDisableScrollToBottomPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToBottomPanel(checked),\n    [setDisableScrollToBottomPanel]\n  );\n\n  const handleDisableScrollToTopPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToTopPanel(checked),\n    [setDisableScrollToTopPanel]\n  );\n\n  const handleAdd = useCallback(count => setParagraphs([...paragraphs, ...createParagraphs(count)]), [\n    paragraphs,\n    setParagraphs\n  ]);\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () => setParagraphs([...paragraphs, 'Button: ' + loremIpsum({ units: 'words' })]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAddSuccessively = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const nextParagraphs = [...paragraphs, lorem.generateSentences(1)];\n\n    setParagraphs(nextParagraphs);\n\n    requestAnimationFrame(() => setParagraphs([...nextParagraphs, lorem.generateParagraphs(5)]));\n  }, [paragraphs, setParagraphs]);\n  const handleAddAndRemove = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const [, ...nextParagraphs] = paragraphs;\n\n    nextParagraphs.push(lorem.generateParagraphs(1));\n\n    setParagraphs(nextParagraphs);\n  }, [paragraphs, setParagraphs]);\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(({ target: { checked } }) => setCommandBarVisible(checked), [\n    setCommandBarVisible\n  ]);\n  const handleContainerSizeLarge = useCallback(() => setContainerSize('large'), [setContainerSize]);\n  const handleContainerSizeNormal = useCallback(() => setContainerSize(''), [setContainerSize]);\n  const handleContainerSizeSmall = useCallback(() => setContainerSize('small'), [setContainerSize]);\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) => setIntervalEnabled(intervalEnabled),\n    [setIntervalEnabled]\n  );\n  const handleLimitAutoScrollHeightChange = useCallback(\n    ({ target: { checked } }) => setLimitAutoScrollHeight(checked),\n    [setLimitAutoScrollHeight]\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        containerCSS + '',\n        containerSize === 'small' ? smallContainerCSS + '' : containerSize === 'large' ? largeContainerCSS + '' : ''\n      ),\n    [containerCSS, containerSize, largeContainerCSS, smallContainerCSS]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  const scroller = useCallback(() => 100, []);\n\n  return (\n    <div className={rootCSS + ''}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddSuccessively}\n            title='When combined with \"limit auto scroll\" checkbox, this button should pause auto-scroll.'\n          >\n            Add successively\n          </button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddAndRemove}\n            title='Add a new paragraph and remove the first paragraph'\n          >\n            Add and remove\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={intervalEnabled} onChange={handleIntervalEnabledChange} type=\"checkbox\" />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={commandBarVisible} onChange={handleCommandBarVisibleChange} type=\"checkbox\" />\n            Show command bar\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={limitAutoScrollHeight} onChange={handleLimitAutoScrollHeightChange} type=\"checkbox\" />\n            Limit auto scroll height to 100px\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <div>\n          {disableScrollToBottomPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n              scrollViewClassName={scrollViewCSS + ''}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {paragraphs.map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input\n              checked={disableScrollToBottomPanel}\n              onChange={handleDisableScrollToBottomPanelClick}\n              type=\"checkbox\"\n            />\n            Disable this panel\n          </label>\n        </div>\n        <div>\n          {disableScrollToTopPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              mode=\"top\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {[...paragraphs].reverse().map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input checked={disableScrollToTopPanel} onChange={handleDisableScrollToTopPanelClick} type=\"checkbox\" />\n            Disable this panel\n          </label>\n        </div>\n      </div>\n      <div className=\"version\">\n        <code>react-scroll-to-bottom@{loadedVersion}</code> has loaded.\n      </div>\n      {intervalEnabled && <Interval callback={handleAdd1} enabled={true} timeout={1000} />}\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App nonce=\"a1b2c3d\" />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}