{"version":3,"sources":["../../../src/addVersionToMetaTag.js","../../../../src/ScrollToBottom/FunctionContext.js","../../../../../src/hooks/internal/useFunctionContext.js","../../../../src/hooks/useScrollToEnd.js","../../../../src/ScrollToBottom/StateContext.js","../../../../src/ScrollToBottom/State1Context.js","../../../../src/ScrollToBottom/State2Context.js","../../../../../src/hooks/internal/useStateContext.js","../../../../src/hooks/useSticky.js","../../../../src/ScrollToBottom/InternalContext.js","../../../../../src/hooks/internal/useInternalContext.js","../../../../../src/hooks/internal/useStyleToClassName.js","../../../../src/ScrollToBottom/AutoHideFollowButton.js","../../../../src/utils/styleConsole.js","../../../../src/utils/debug.js","../../../src/debounce.js","../../../src/EventSpy.js","../../../src/SpineTo.js","../../../../../src/hooks/internal/useStateRef.js","../../../../src/ScrollToBottom/Composer.js","../../../src/createCSSKey.js","../../../../src/ScrollToBottom/Panel.js","../../../src/BasicScrollToBottom.js","../../../src/index.js","CommandBar.js","../../../../src/hooks/useScrollTo.js","../../../../src/hooks/useScrollToBottom.js","../../../../src/hooks/useScrollToStart.js","../../../../src/hooks/useScrollToTop.js","StatusBar.js","../../../../src/hooks/useAnimating.js","../../../../src/hooks/useAnimatingToEnd.js","../../../../src/hooks/useAtBottom.js","../../../../src/hooks/useAtEnd.js","../../../../src/hooks/useAtStart.js","../../../../src/hooks/useAtTop.js","../../../../src/hooks/useMode.js","../../../../src/hooks/useObserveScrollPosition.js","App.js","registerServiceWorker.js","index.js"],"names":["addVersionToMetaTag","name","content","document","meta","encodeURI","err","setMetaTag","context","scrollTo","scrollToBottom","scrollToEnd","scrollToStart","scrollToTop","useFunctionContext","useContext","useScrollToEnd","animating","animatingToEnd","atBottom","atEnd","atStart","atTop","mode","sticky","stateContexts","StateContext","State1Context","useStateContext","tier","useSticky","offsetHeight","scrollHeight","setTarget","styleToClassName","useInternalContext","useStyleToClassName","ROOT_STYLE","backgroundColor","borderRadius","borderWidth","bottom","cursor","height","outline","position","right","width","AutoHideFollowButton","children","className","rootCSS","classNames","onClick","type","PropTypes","string","styleConsole","color","styles","format","category","arg0","args","EventSpy","debounce","onEvent","target","onEventRef","useRef","debouncer","useMemo","last","timeout","now","Date","fn","clearTimeout","setTimeout","Math","ms","debounceFn","event","current","handleEvent","useCallback","useLayoutEffect","passive","squareStepper","to","sign","next","step","from","stepper","index","i","SpineTo","onEnd","value","animator","animate","start","cancelAnimationFrame","requestAnimationFrame","toNumber","nextValue","handleCancelAnimation","isRequired","useStateRef","initialState","useState","state","setState","ref","setValue","MODE_TOP","emotionPool","computeViewState","scrollTop","isEnd","animateTo","Composer","checkInterval","debugFromProp","debug","initialScrollBehavior","nonce","scroller","force","lines","Array","oneLiner","console","createDebug","ignoreScrollEventBeforeRef","initialScrollBehaviorRef","setAnimateTo","animateToRef","targetRef","animateFromRef","offsetHeightRef","scrollHeightRef","setAtBottom","setAtEnd","setAtTop","setAtStart","setSticky","stickyRef","scrollPositionObserversRef","observeScrollPosition","scrollPositionObservers","handleSpineToEnd","behavior","nextAnimateTo","options","scrollToSticky","animateFrom","maxValue","minValue","rawNextValue","handleScroll","timeStampLow","nextOffsetHeight","nextScrollHeight","offsetHeightChanged","scrollHeightChanged","prevOffsetHeight","prevScrollHeight","nextSticky","actualScrollTop","observer","useEffect","stickyButNotAtEndSince","setInterval","clearInterval","emotion","createEmotion","key","String","style","internalContext","state1Context","state2Context","combinedStateContext","functionContext","handleFocus","capture","InternalContext","FunctionContext","State2Context","func","overflowY","Panel","undefined","BasicScrollToBottomCore","followButtonClassName","scrollViewClassName","BasicScrollToBottom","boxShadow","display","listStyleType","margin","padding","fontSize","marginLeft","CommandBar","css","setOptions","handleScrollTo100pxClick","handleScrollToBottomClick","handleScrollToEndClick","handleScrollToStartClick","handleScrollToTopClick","handleSmoothChange","checked","onChange","alignItems","flex","fontFamily","justifyContent","textAlign","StatusBar","scrollTopRef","deps","useObserveScrollPosition","innerText","FADE_IN_ANIMATION_KEYFRAMES","opacity","marginRight","CONTAINER_STYLE","borderColor","borderStyle","marginTop","LARGE_CONTAINER_STYLE","SCROLL_VIEW_STYLE","SCROLL_VIEW_PADDING_STYLE","paddingLeft","paddingRight","SMALL_CONTAINER_STYLE","STATUS_BAR_CSS","createParagraphs","count","fill","map","loremIpsum","units","App","keyframes","containerCSS","largeContainerCSS","scrollViewCSS","scrollViewPaddingCSS","animation","smallContainerCSS","statusBarCSS","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","limitAutoScrollHeight","setLimitAutoScrollHeight","querySelector","getAttribute","loadedVersion","disableScrollToBottomPanel","setDisableScrollToBottomPanel","disableScrollToTopPanel","setDisableScrollToTopPanel","handleDisableScrollToBottomPanelClick","handleDisableScrollToTopPanelClick","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleAddSuccessively","lorem","LoremIpsum","nextParagraphs","generateSentences","generateParagraphs","handleAddAndRemove","push","handleClear","handleCommandBarVisibleChange","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","handleLimitAutoScrollHeightChange","containerClassName","handleKeyDown","keyCode","window","location","reload","addEventListener","removeEventListener","title","Consumer","paragraph","startsWith","substr","reverse","callback","enabled","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e57a8f3e.chunk.js","sourcesContent":["/* global global:readonly, process:readonly */\n/* eslint no-empty: [\"error\", { \"allowEmptyCatch\": true }] */\n\nfunction setMetaTag(name, content) {\n  try {\n    const { document } = global;\n\n    if (typeof document !== 'undefined' && document.createElement && document.head && document.head.appendChild) {\n      const meta = document.querySelector(`html meta[name=\"${encodeURI(name)}\"]`) || document.createElement('meta');\n\n      meta.setAttribute('name', name);\n      meta.setAttribute('content', content);\n\n      document.head.appendChild(meta);\n    }\n  } catch (err) {}\n}\n\nexport default function addVersionToMetaTag() {\n  setMetaTag('react-scroll-to-bottom:version', process.env.npm_package_version);\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  scrollTo: () => 0,\n  scrollToBottom: () => 0,\n  scrollToEnd: () => 0,\n  scrollToStart: () => 0,\n  scrollToTop: () => 0\n});\n\ncontext.displayName = 'ScrollToBottomFunctionContext';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport FunctionContext from '../../ScrollToBottom/FunctionContext';\n\nexport default function useFunctionContext() {\n  return useContext(FunctionContext);\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToEnd() {\n  const { scrollToEnd } = useFunctionContext();\n\n  return scrollToEnd;\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom',\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomStateContext';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  atBottom: true,\n  atEnd: true,\n  atStart: false,\n  atTop: true,\n  mode: 'bottom'\n});\n\ncontext.displayName = 'ScrollToBottomState1Context';\n\nexport default context;\n","import React from 'react';\n\nconst context = React.createContext({\n  animating: false,\n  animatingToEnd: false,\n  sticky: true\n});\n\ncontext.displayName = 'ScrollToBottomState2Context';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport StateContext from '../../ScrollToBottom/StateContext';\nimport State1Context from '../../ScrollToBottom/State1Context';\nimport State2Context from '../../ScrollToBottom/State2Context';\n\nconst stateContexts = [StateContext, State1Context, State2Context];\n\nexport default function useStateContext(tier) {\n  return useContext(stateContexts[tier] || stateContexts[0]);\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useSticky() {\n  const { sticky } = useStateContext(2);\n\n  return [sticky];\n}\n","import React from 'react';\n\nconst context = React.createContext({\n  offsetHeight: 0,\n  scrollHeight: 0,\n  setTarget: () => 0,\n  styleToClassName: () => ''\n});\n\ncontext.displayName = 'ScrollToBottomInternalContext';\n\nexport default context;\n","import { useContext } from 'react';\n\nimport InternalContext from '../../ScrollToBottom/InternalContext';\n\nexport default function useInternalContext() {\n  return useContext(InternalContext);\n}\n","import useInternalContext from './useInternalContext';\n\nexport default function useStyleToClassName() {\n  const { styleToClassName } = useInternalContext();\n\n  return styleToClassName;\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useScrollToEnd from '../hooks/useScrollToEnd';\nimport useSticky from '../hooks/useSticky';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  backgroundColor: 'rgba(0, 0, 0, .2)',\n  borderRadius: 10,\n  borderWidth: 0,\n  bottom: 5,\n  cursor: 'pointer',\n  height: 20,\n  outline: 0,\n  position: 'absolute',\n  right: 20,\n  width: 20,\n\n  '&:hover': {\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n\n  '&:active': {\n    backgroundColor: 'rgba(0, 0, 0, .6)'\n  }\n};\n\nconst AutoHideFollowButton = ({ children, className }) => {\n  const [sticky] = useSticky();\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n  const scrollToEnd = useScrollToEnd();\n\n  return (\n    !sticky && (\n      <button className={classNames(rootCSS, (className || '') + '')} onClick={scrollToEnd} type=\"button\">\n        {children}\n      </button>\n    )\n  );\n};\n\nAutoHideFollowButton.defaultProps = {\n  children: undefined,\n  className: ''\n};\n\nAutoHideFollowButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default AutoHideFollowButton;\n","export default function styleConsole(backgroundColor, color = 'white') {\n  let styles = `background-color: ${backgroundColor}; border-radius: 4px; padding: 2px 4px;`;\n\n  if (color) {\n    styles += ` color: ${color};`;\n  }\n\n  return [styles, ''];\n}\n","/* eslint no-console: [\"off\"] */\n\nimport styleConsole from './styleConsole';\n\nfunction format(category, arg0, ...args) {\n  return [`%c${category}%c ${arg0}`, ...styleConsole('green', 'white'), ...args];\n}\n\nexport default function debug(category, { force = false } = {}) {\n  if (!force) {\n    return () => 0;\n  }\n\n  return (...args) => {\n    if (!args.length) {\n      return;\n    }\n\n    const [arg0] = args;\n\n    if (typeof arg0 === 'function') {\n      args = arg0();\n    }\n\n    const lines = Array.isArray(args[0]) ? args : [args];\n    const oneLiner = lines.length === 1;\n\n    lines.forEach((line, index) => {\n      if (oneLiner) {\n        console.log(...format(category, ...line));\n      } else if (index) {\n        console.log(...(Array.isArray(line) ? line : [line]));\n      } else {\n        console.groupCollapsed(...format(category, ...line));\n      }\n    });\n\n    oneLiner || console.groupEnd();\n  };\n}\n","export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return (...args) => {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn(...args);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn(...args);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n","import { useCallback, useLayoutEffect, useMemo, useRef } from 'react';\n\nimport debounceFn from './debounce';\n\nconst EventSpy = ({ debounce, name, onEvent, target }) => {\n  // We need to save the \"onEvent\" to ref.\n  // This is because \"onEvent\" may change from time to time, but debounce may still fire to the older callback.\n  const onEventRef = useRef();\n\n  onEventRef.current = onEvent;\n\n  const debouncer = useMemo(\n    () =>\n      debounceFn(event => {\n        const { current } = onEventRef;\n\n        current && current(event);\n      }, debounce),\n    [debounce, onEventRef]\n  );\n\n  const handleEvent = useCallback(\n    event => {\n      event.timeStampLow = Date.now();\n\n      debouncer(event);\n    },\n    [debouncer]\n  );\n\n  useLayoutEffect(() => {\n    target.addEventListener(name, handleEvent, { passive: true });\n    handleEvent({ target, type: name });\n\n    return () => target.removeEventListener(name, handleEvent);\n  }, [name, handleEvent, target]);\n\n  return false;\n};\n\nEventSpy.defaultProps = {\n  debounce: 200\n};\n\nexport default EventSpy;\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 1.5, 5] }] */\n\nimport { useCallback, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction squareStepper(current, to) {\n  const sign = Math.sign(to - current);\n  const step = Math.sqrt(Math.abs(to - current));\n  const next = current + step * sign;\n\n  if (sign > 0) {\n    return Math.min(to, next);\n  }\n\n  return Math.max(to, next);\n}\n\nfunction step(from, to, stepper, index) {\n  let next = from;\n\n  for (let i = 0; i < index; i++) {\n    next = stepper(next, to);\n  }\n\n  return next;\n}\n\nconst SpineTo = ({ name, onEnd, target, value }) => {\n  const animator = useRef();\n\n  const animate = useCallback(\n    (name, from, to, index, start = Date.now()) => {\n      if (to === '100%' || typeof to === 'number') {\n        cancelAnimationFrame(animator.current);\n\n        animator.current = requestAnimationFrame(() => {\n          if (target) {\n            const toNumber = to === '100%' ? target.scrollHeight - target.offsetHeight : to;\n            let nextValue = step(from, toNumber, squareStepper, (Date.now() - start) / 5);\n\n            if (Math.abs(toNumber - nextValue) < 1.5) {\n              nextValue = toNumber;\n            }\n\n            target[name] = nextValue;\n\n            if (toNumber === nextValue) {\n              onEnd && onEnd(true);\n            } else {\n              animate(name, from, to, index + 1, start);\n            }\n          }\n        });\n      }\n    },\n    [animator, onEnd, target]\n  );\n\n  const handleCancelAnimation = useCallback(() => {\n    cancelAnimationFrame(animator.current);\n    onEnd && onEnd(false);\n  }, [onEnd]);\n\n  useLayoutEffect(() => {\n    animate(name, target[name], value, 1);\n\n    if (target) {\n      target.addEventListener('pointerdown', handleCancelAnimation, { passive: true });\n      target.addEventListener('wheel', handleCancelAnimation, { passive: true });\n\n      return () => {\n        target.removeEventListener('pointerdown', handleCancelAnimation);\n        target.removeEventListener('wheel', handleCancelAnimation);\n        cancelAnimationFrame(animator.current);\n      };\n    }\n\n    return () => cancelAnimationFrame(animator.current);\n  }, [animate, animator, handleCancelAnimation, name, target, value]);\n\n  return false;\n};\n\nSpineTo.propTypes = {\n  name: PropTypes.string.isRequired,\n  onEnd: PropTypes.func,\n  target: PropTypes.any.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['100%'])]).isRequired\n};\n\nexport default SpineTo;\n","import { useCallback, useRef, useState } from 'react';\n\nexport default function useStateRef(initialState) {\n  const [state, setState] = useState(initialState);\n  const ref = useRef();\n  const setValue = useCallback(\n    nextValue => {\n      if (typeof nextValue === 'function') {\n        setValue(state => {\n          nextValue = nextValue(state);\n\n          ref.current = nextValue;\n\n          return nextValue;\n        });\n      } else {\n        ref.current = nextValue;\n\n        setValue(nextValue);\n      }\n    },\n    [ref, setState]\n  );\n\n  ref.current = state;\n\n  return [state, setState, ref];\n}\n","import createEmotion from 'create-emotion';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport createCSSKey from '../createCSSKey';\nimport createDebug from '../utils/debug';\nimport EventSpy from '../EventSpy';\nimport FunctionContext from './FunctionContext';\nimport InternalContext from './InternalContext';\nimport SpineTo from '../SpineTo';\nimport State1Context from './State1Context';\nimport State2Context from './State2Context';\nimport StateContext from './StateContext';\nimport styleConsole from '../utils/styleConsole';\nimport useStateRef from '../hooks/internal/useStateRef';\n\nconst DEFAULT_SCROLLER = () => Infinity;\nconst MIN_CHECK_INTERVAL = 17; // 1 frame\nconst MODE_BOTTOM = 'bottom';\nconst MODE_TOP = 'top';\nconst NEAR_END_THRESHOLD = 1;\nconst SCROLL_DECISION_DURATION = 34; // 2 frames\n\n// We pool the emotion object by nonce.\n// This is to make sure we don't generate too many unneeded <style> tags.\nconst emotionPool = {};\n\nfunction setImmediateInterval(fn, ms) {\n  fn();\n\n  return setInterval(fn, ms);\n}\n\nfunction computeViewState({ mode, target: { offsetHeight, scrollHeight, scrollTop } }) {\n  const atBottom = scrollHeight - scrollTop - offsetHeight < NEAR_END_THRESHOLD;\n  const atTop = scrollTop < NEAR_END_THRESHOLD;\n\n  const atEnd = mode === MODE_TOP ? atTop : atBottom;\n  const atStart = mode !== MODE_TOP ? atTop : atBottom;\n\n  return {\n    atBottom,\n    atEnd,\n    atStart,\n    atTop\n  };\n}\n\nfunction isEnd(animateTo, mode) {\n  return animateTo === (mode === MODE_TOP ? 0 : '100%');\n}\n\nconst Composer = ({\n  checkInterval,\n  children,\n  debounce,\n  debug: debugFromProp,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller\n}) => {\n  const debug = useMemo(() => createDebug(`<ScrollToBottom>`, { force: debugFromProp }), [debugFromProp]);\n\n  mode = mode === MODE_TOP ? MODE_TOP : MODE_BOTTOM;\n\n  const ignoreScrollEventBeforeRef = useRef(0);\n  const initialScrollBehaviorRef = useRef(initialScrollBehavior);\n  const [animateTo, setAnimateTo, animateToRef] = useStateRef(mode === MODE_TOP ? 0 : '100%');\n  const [target, setTarget, targetRef] = useStateRef(null);\n\n  // Internal context\n  const animateFromRef = useRef(0);\n  const offsetHeightRef = useRef(0);\n  const scrollHeightRef = useRef(0);\n\n  // State context\n  const [atBottom, setAtBottom] = useState(true);\n  const [atEnd, setAtEnd] = useState(true);\n  const [atTop, setAtTop] = useState(true);\n  const [atStart, setAtStart] = useState(false);\n  const [sticky, setSticky, stickyRef] = useStateRef(true);\n\n  // High-rate state context\n  const scrollPositionObserversRef = useRef([]);\n  const observeScrollPosition = useCallback(\n    fn => {\n      const { current: target } = targetRef;\n\n      scrollPositionObserversRef.current.push(fn);\n      target && fn({ scrollTop: target.scrollTop });\n\n      return () => {\n        const { current: scrollPositionObservers } = scrollPositionObserversRef;\n        const index = scrollPositionObservers.indexOf(fn);\n\n        ~index && scrollPositionObservers.splice(index, 1);\n      };\n    },\n    [scrollPositionObserversRef, targetRef]\n  );\n\n  const handleSpineToEnd = useCallback(() => {\n    const { current: animateTo } = animateToRef;\n\n    debug(() => [\n      '%cSpineTo%c: %conEnd%c is fired.',\n      ...styleConsole('magenta'),\n      ...styleConsole('orange'),\n      { animateTo }\n    ]);\n\n    ignoreScrollEventBeforeRef.current = Date.now();\n\n    // handleScrollEnd may end at a position which should lose stickiness.\n    // In that case, we will need to set sticky to false to stop the interval check.\n    // Test case:\n    // 1. Add a scroller that always return 0\n    // 2. Show a panel with mode === MODE_BOTTOM\n    // 3. Programmatically scroll to 0 (set element.scrollTop = 0)\n    // Expected: it should not repetitively call scrollTo(0)\n    //           it should set stickiness to false\n\n    isEnd(animateTo, mode) || setSticky(false);\n    setAnimateTo(null);\n  }, [animateToRef, debug, ignoreScrollEventBeforeRef, mode, setAnimateTo, setSticky]);\n\n  // Function context\n  const scrollTo = useCallback(\n    (nextAnimateTo, { behavior } = {}) => {\n      const { current: target } = targetRef;\n\n      if (typeof nextAnimateTo !== 'number' && nextAnimateTo !== '100%') {\n        return console.warn('react-scroll-to-bottom: Arguments passed to scrollTo() must be either number or \"100%\".');\n      }\n\n      // If it is trying to scroll to a position which is not \"atEnd\", it should set sticky to false after scroll ended.\n\n      debug(() => [\n        [\n          `%cscrollTo%c: Will scroll to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c`,\n          ...styleConsole('lime', ''),\n          ...styleConsole('purple')\n        ],\n        {\n          behavior,\n          nextAnimateTo,\n          target\n        }\n      ]);\n\n      if (behavior === 'auto') {\n        // Stop any existing animation\n        handleSpineToEnd();\n\n        if (target) {\n          // Jump to the scroll position\n          target.scrollTop = nextAnimateTo === '100%' ? target.scrollHeight - target.offsetHeight : nextAnimateTo;\n        }\n      } else {\n        behavior !== 'smooth' &&\n          console.warn(\n            'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollTo\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n          );\n\n        setAnimateTo(nextAnimateTo);\n      }\n\n      // This is for handling a case. When calling scrollTo('100%', { behavior: 'auto' }) multiple times, it would lose stickiness.\n      if (isEnd(nextAnimateTo, mode)) {\n        debug(() => [\n          [\n            `%cscrollTo%c: Scrolling to end, will set sticky to %ctrue%c.`,\n            ...styleConsole('lime', ''),\n            ...styleConsole('purple')\n          ],\n          [{ mode, nextAnimateTo }]\n        ]);\n\n        setSticky(true);\n      }\n    },\n    [debug, handleSpineToEnd, mode, setAnimateTo, setSticky, targetRef]\n  );\n\n  const scrollToBottom = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToBottom%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToBottom\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo('100%', { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToTop = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToTop%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToTop\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      scrollTo(0, { behavior: behavior || 'smooth' });\n    },\n    [debug, scrollTo]\n  );\n\n  const scrollToEnd = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToEnd%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToEnd\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToTop(options) : scrollToBottom(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToStart = useCallback(\n    ({ behavior } = {}) => {\n      debug(() => ['%cscrollToStart%c: Called', ...styleConsole('yellow', '')]);\n\n      behavior !== 'smooth' &&\n        console.warn(\n          'react-scroll-to-bottom: Please set \"behavior\" when calling \"scrollToStart\". In future versions, the default behavior will be changed from smooth scrolling to discrete scrolling to align with HTML Standard.'\n        );\n\n      const options = { behavior: behavior || 'smooth' };\n\n      mode === MODE_TOP ? scrollToBottom(options) : scrollToTop(options);\n    },\n    [debug, mode, scrollToBottom, scrollToTop]\n  );\n\n  const scrollToSticky = useCallback(() => {\n    const { current: target } = targetRef;\n\n    if (target) {\n      if (initialScrollBehaviorRef.current === 'auto') {\n        debug(() => [`%ctarget changed%c: Initial scroll`, ...styleConsole('blue')]);\n\n        target.scrollTop = mode === MODE_TOP ? 0 : target.scrollHeight - target.offsetHeight;\n        initialScrollBehaviorRef.current = false;\n\n        return;\n      }\n\n      // This is very similar to scrollToEnd().\n      // Instead of scrolling to end, it will call props.scroller() to determines how far it should scroll.\n      // This function could be called while it is auto-scrolling.\n\n      const { current: animateFrom } = animateFromRef;\n      const { offsetHeight, scrollHeight, scrollTop } = target;\n\n      const maxValue = mode === MODE_TOP ? 0 : Math.max(0, scrollHeight - offsetHeight - scrollTop);\n      const minValue = Math.max(0, animateFrom - scrollTop);\n\n      const rawNextValue = scroller({ maxValue, minValue, offsetHeight, scrollHeight, scrollTop });\n\n      const nextValue = Math.max(0, Math.min(maxValue, rawNextValue));\n\n      let nextAnimateTo;\n\n      if (mode === MODE_TOP || nextValue !== maxValue) {\n        nextAnimateTo = scrollTop + nextValue;\n      } else {\n        // When scrolling to bottom, we should scroll to \"100%\".\n        // Otherwise, if we scroll to any number, it will lose stickiness when elements are adding too fast.\n        // \"100%\" is a special argument intended to make sure stickiness is not lost while new elements are being added.\n        nextAnimateTo = '100%';\n      }\n\n      debug(() => [\n        [\n          `%cscrollToSticky%c: Will animate from %c${animateFrom}px%c to %c${\n            typeof nextAnimateTo === 'number' ? nextAnimateTo + 'px' : nextAnimateTo.replace(/%/gu, '%%')\n          }%c (%c${(nextAnimateTo === '100%' ? maxValue : nextAnimateTo) + animateFrom}px%c)`,\n          ...styleConsole('orange'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple'),\n          ...styleConsole('purple')\n        ],\n        {\n          animateFrom,\n          maxValue,\n          minValue,\n          nextAnimateTo,\n          nextValue,\n          offsetHeight,\n          rawNextValue,\n          scrollHeight,\n          scrollTop\n        }\n      ]);\n\n      scrollTo(nextAnimateTo, { behavior: 'smooth' });\n    }\n  }, [animateFromRef, debug, mode, scroller, scrollTo, targetRef]);\n\n  const handleScroll = useCallback(\n    ({ timeStampLow }) => {\n      const { current: animateTo } = animateToRef;\n      const { current: target } = targetRef;\n\n      const animating = animateTo !== null;\n\n      // Currently, there are no reliable way to check if the \"scroll\" event is trigger due to\n      // user gesture, programmatic scrolling, or Chrome-synthesized \"scroll\" event to compensate size change.\n      // Thus, we use our best-effort to guess if it is triggered by user gesture, and disable sticky if it is heading towards the start direction.\n\n      if (timeStampLow <= ignoreScrollEventBeforeRef.current || !target) {\n        // Since we debounce \"scroll\" event, this handler might be called after spineTo.onEnd (a.k.a. artificial scrolling).\n        // We should ignore debounced event fired after scrollEnd, because without skipping them, the userInitiatedScroll calculated below will not be accurate.\n        // Thus, on a fast machine, adding elements super fast will lose the \"stickiness\".\n\n        return;\n      }\n\n      const { atBottom, atEnd, atStart, atTop } = computeViewState({ mode, target });\n\n      setAtBottom(atBottom);\n      setAtEnd(atEnd);\n      setAtStart(atStart);\n      setAtTop(atTop);\n\n      // Chrome will emit \"synthetic\" scroll event if the container is resized or an element is added\n      // We need to ignore these \"synthetic\" events\n      // Repro: In playground, press 4-1-5-1-1 (small, add one, normal, add one, add one)\n      //        Nomatter how fast or slow the sequence is being pressed, it should still stick to the bottom\n      const { offsetHeight: nextOffsetHeight, scrollHeight: nextScrollHeight } = target;\n      const { current: offsetHeight } = offsetHeightRef;\n      const { current: scrollHeight } = scrollHeightRef;\n      const offsetHeightChanged = nextOffsetHeight !== offsetHeight;\n      const scrollHeightChanged = nextScrollHeight !== scrollHeight;\n\n      if (offsetHeightChanged) {\n        offsetHeightRef.current = nextOffsetHeight;\n      }\n\n      if (scrollHeightChanged) {\n        scrollHeightRef.current = nextScrollHeight;\n      }\n\n      // Sticky means:\n      // - If it is scrolled programatically, we are still in sticky mode\n      // - If it is scrolled by the user, then sticky means if we are at the end\n\n      // Only update stickiness if the scroll event is not due to synthetic scroll done by Chrome\n      if (!offsetHeightChanged && !scrollHeightChanged) {\n        // We are sticky if we are animating to the end, or we are already at the end.\n        // We can be \"animating but not sticky\" by calling \"scrollTo(100)\" where the container scrollHeight is 200px.\n        const nextSticky = (animating && isEnd(animateTo, mode)) || atEnd;\n\n        if (stickyRef.current !== nextSticky) {\n          debug(() => [\n            [\n              `%conScroll%c: %csetSticky%c(%c${nextSticky}%c)`,\n              ...styleConsole('red'),\n              ...styleConsole('red'),\n              ...styleConsole('purple')\n            ],\n            [\n              `(animating = %c${animating}%c && isEnd = %c${isEnd(animateTo, mode)}%c) || atEnd = %c${atEnd}%c`,\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              ...styleConsole('purple'),\n              {\n                animating,\n                animateTo,\n                atEnd,\n                mode,\n                offsetHeight: target.offsetHeight,\n                scrollHeight: target.scrollHeight,\n                sticky,\n                nextSticky\n              }\n            ]\n          ]);\n\n          setSticky(nextSticky);\n        }\n      } else if (stickyRef.current) {\n        debug(() => [\n          [\n            `%conScroll%c: Size changed while sticky, calling %cscrollToSticky()%c`,\n            ...styleConsole('red'),\n            ...styleConsole('orange'),\n            {\n              offsetHeightChanged,\n              scrollHeightChanged\n            }\n          ],\n          {\n            nextOffsetHeight,\n            prevOffsetHeight: offsetHeight,\n            nextScrollHeight,\n            prevScrollHeight: scrollHeight\n          }\n        ]);\n\n        scrollToSticky();\n      }\n\n      const { scrollTop: actualScrollTop } = target;\n\n      scrollPositionObserversRef.current.forEach(observer => observer({ scrollTop: actualScrollTop }));\n    },\n    [\n      animateToRef,\n      debug,\n      ignoreScrollEventBeforeRef,\n      mode,\n      offsetHeightRef,\n      scrollHeightRef,\n      scrollPositionObserversRef,\n      scrollToSticky,\n      setAtBottom,\n      setAtEnd,\n      setAtStart,\n      setAtTop,\n      setSticky,\n      stickyRef,\n      targetRef\n    ]\n  );\n\n  useEffect(() => {\n    if (target) {\n      let stickyButNotAtEndSince = false;\n\n      const timeout = setImmediateInterval(() => {\n        const { current: target } = targetRef;\n        const animating = animateToRef.current !== null;\n\n        if (stickyRef.current) {\n          if (!computeViewState({ mode, target }).atEnd) {\n            if (!stickyButNotAtEndSince) {\n              stickyButNotAtEndSince = Date.now();\n            } else if (Date.now() - stickyButNotAtEndSince > SCROLL_DECISION_DURATION) {\n              // Quirks: In Firefox, after user scroll down, Firefox do two things:\n              //         1. Set to a new \"scrollTop\"\n              //         2. Fire \"scroll\" event\n              //         For what we observed, #1 is fired about 20ms before #2. There is a chance that this stickyCheckTimeout is being scheduled between 1 and 2.\n              //         That means, if we just look at #1 to decide if we should scroll, we will always scroll, in oppose to the user's intention.\n              // Repro: Open Firefox, set checkInterval to a lower number, and try to scroll by dragging the scroll handler. It will jump back.\n\n              // The \"animating\" check will make sure stickiness is not lost when elements are adding at a very fast pace.\n              if (!animating) {\n                animateFromRef.current = target.scrollTop;\n\n                debug(() => [\n                  `%cInterval check%c: Should sticky but not at end, calling %cscrollToSticky()%c to scroll`,\n                  ...styleConsole('navy'),\n                  ...styleConsole('orange')\n                ]);\n\n                scrollToSticky();\n              }\n\n              stickyButNotAtEndSince = false;\n            }\n          } else {\n            stickyButNotAtEndSince = false;\n          }\n        } else if (target.scrollHeight <= target.offsetHeight && !stickyRef.current) {\n          // When the container is emptied, we will set sticky back to true.\n\n          debug(() => [\n            [\n              `%cInterval check%c: Container is emptied, setting sticky back to %ctrue%c`,\n              ...styleConsole('navy'),\n              ...styleConsole('purple')\n            ],\n            [\n              {\n                offsetHeight: target.offsetHeight,\n                scrollHeight: target.scrollHeight,\n                sticky: stickyRef.current\n              }\n            ]\n          ]);\n\n          setSticky(true);\n        }\n      }, Math.max(MIN_CHECK_INTERVAL, checkInterval) || MIN_CHECK_INTERVAL);\n\n      return () => clearInterval(timeout);\n    }\n  }, [animateToRef, checkInterval, debug, mode, scrollToSticky, setSticky, stickyRef, target, targetRef]);\n\n  const styleToClassName = useMemo(() => {\n    const emotion =\n      emotionPool[nonce] ||\n      (emotionPool[nonce] = createEmotion({ key: 'react-scroll-to-bottom--css-' + createCSSKey(), nonce }));\n\n    return style => emotion.css(style) + '';\n  }, [nonce]);\n\n  const internalContext = useMemo(\n    () => ({\n      observeScrollPosition,\n      setTarget,\n      styleToClassName\n    }),\n    [observeScrollPosition, setTarget, styleToClassName]\n  );\n\n  const state1Context = useMemo(\n    () => ({\n      atBottom,\n      atEnd,\n      atStart,\n      atTop,\n      mode\n    }),\n    [atBottom, atEnd, atStart, atTop, mode]\n  );\n\n  const state2Context = useMemo(() => {\n    const animating = animateTo !== null;\n\n    return {\n      animating,\n      animatingToEnd: animating && isEnd(animateTo, mode),\n      sticky\n    };\n  }, [animateTo, debug, mode, sticky]);\n\n  const combinedStateContext = useMemo(\n    () => ({\n      ...state1Context,\n      ...state2Context\n    }),\n    [state1Context, state2Context]\n  );\n\n  const functionContext = useMemo(\n    () => ({\n      scrollTo,\n      scrollToBottom,\n      scrollToEnd,\n      scrollToStart,\n      scrollToTop\n    }),\n    [scrollTo, scrollToBottom, scrollToEnd, scrollToStart, scrollToTop]\n  );\n\n  useEffect(() => {\n    // We need to update the \"scrollHeight\" value to latest when the user do a focus inside the box.\n    //\n    // This is because:\n    // - In our code that mitigate Chrome synthetic scrolling, that code will look at whether \"scrollHeight\" value is latest or not.\n    // - That code only run on \"scroll\" event.\n    // - That means, on every \"scroll\" event, if the \"scrollHeight\" value is not latest, we will skip modifying the stickiness.\n    // - That means, if the user \"focus\" to an element that cause the scroll view to scroll to the bottom, the user agent will fire \"scroll\" event.\n    //   Since the \"scrollHeight\" is not latest value, this \"scroll\" event will be ignored and stickiness will not be modified.\n    // - That means, if the user \"focus\" to a newly added element that is at the end of the scroll view, the \"scroll to bottom\" button will continue to show.\n    //\n    // Repro in Chrome:\n    // 1. Fill up a scroll view\n    // 2. Scroll up, the \"scroll to bottom\" button should show up\n    // 3. Click \"Add a button\"\n    // 4. Click on the scroll view (to pseudo-focus on it)\n    // 5. Press TAB, the scroll view will be at the bottom\n    //\n    // Expect:\n    // - The \"scroll to bottom\" button should be gone.\n    if (target) {\n      const handleFocus = () => {\n        scrollHeightRef.current = target.scrollHeight;\n      };\n\n      target.addEventListener('focus', handleFocus, { capture: true, passive: true });\n\n      return () => target.removeEventListener('focus', handleFocus);\n    }\n  }, [target]);\n\n  debug(() => [\n    [`%cRender%c: Render`, ...styleConsole('cyan', '')],\n    {\n      animateTo,\n      animating: animateTo !== null,\n      sticky,\n      target\n    }\n  ]);\n\n  return (\n    <InternalContext.Provider value={internalContext}>\n      <FunctionContext.Provider value={functionContext}>\n        <StateContext.Provider value={combinedStateContext}>\n          <State1Context.Provider value={state1Context}>\n            <State2Context.Provider value={state2Context}>\n              {children}\n              {target && <EventSpy debounce={debounce} name=\"scroll\" onEvent={handleScroll} target={target} />}\n              {target && animateTo !== null && (\n                <SpineTo name=\"scrollTop\" onEnd={handleSpineToEnd} target={target} value={animateTo} />\n              )}\n            </State2Context.Provider>\n          </State1Context.Provider>\n        </StateContext.Provider>\n      </FunctionContext.Provider>\n    </InternalContext.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  checkInterval: 100,\n  children: undefined,\n  debounce: 17,\n  debug: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scroller: DEFAULT_SCROLLER\n};\n\nComposer.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scroller: PropTypes.func\n};\n\nexport default Composer;\n","import random from 'math-random';\n\nexport default function useCSSKey() {\n  return random()\n    .toString(26)\n    .substr(2, 5)\n    .replace(/\\d/g, value => String.fromCharCode(value.charCodeAt(0) + 65));\n}\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\n\nimport InternalContext from './InternalContext';\nimport useStyleToClassName from '../hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  height: '100%',\n  overflowY: 'auto',\n  width: '100%'\n};\n\nconst Panel = ({ children, className }) => {\n  const { setTarget } = useContext(InternalContext);\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')} ref={setTarget}>\n      {children}\n    </div>\n  );\n};\n\nPanel.defaultProps = {\n  children: undefined,\n  className: undefined\n};\n\nPanel.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string\n};\n\nexport default Panel;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport Composer from './ScrollToBottom/Composer';\nimport Panel from './ScrollToBottom/Panel';\nimport useStyleToClassName from './hooks/internal/useStyleToClassName';\n\nconst ROOT_STYLE = {\n  position: 'relative'\n};\n\nconst BasicScrollToBottomCore = ({ children, className, followButtonClassName, scrollViewClassName }) => {\n  const rootCSS = useStyleToClassName()(ROOT_STYLE);\n\n  return (\n    <div className={classNames(rootCSS, (className || '') + '')}>\n      <Panel className={(scrollViewClassName || '') + ''}>{children}</Panel>\n      <AutoHideFollowButton className={(followButtonClassName || '') + ''} />\n    </div>\n  );\n};\n\nBasicScrollToBottomCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  followButtonClassName: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottomCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  followButtonClassName: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nconst BasicScrollToBottom = ({\n  checkInterval,\n  children,\n  className,\n  debounce,\n  debug,\n  followButtonClassName,\n  initialScrollBehavior,\n  mode,\n  nonce,\n  scroller,\n  scrollViewClassName\n}) => {\n  return (\n    <Composer\n      checkInterval={checkInterval}\n      debounce={debounce}\n      debug={debug}\n      initialScrollBehavior={initialScrollBehavior}\n      mode={mode}\n      nonce={nonce}\n      scroller={scroller}\n    >\n      <BasicScrollToBottomCore\n        className={className}\n        followButtonClassName={followButtonClassName}\n        scrollViewClassName={scrollViewClassName}\n      >\n        {children}\n      </BasicScrollToBottomCore>\n    </Composer>\n  );\n};\n\nBasicScrollToBottom.defaultProps = {\n  checkInterval: undefined,\n  children: undefined,\n  className: undefined,\n  debounce: undefined,\n  debug: undefined,\n  followButtonClassName: undefined,\n  initialScrollBehavior: 'smooth',\n  mode: undefined,\n  nonce: undefined,\n  scrollViewClassName: undefined\n};\n\nBasicScrollToBottom.propTypes = {\n  checkInterval: PropTypes.number,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  debounce: PropTypes.number,\n  debug: PropTypes.bool,\n  followButtonClassName: PropTypes.string,\n  initialScrollBehavior: PropTypes.oneOf(['auto', 'smooth']),\n  mode: PropTypes.oneOf(['bottom', 'top']),\n  nonce: PropTypes.string,\n  scrollViewClassName: PropTypes.string\n};\n\nexport default BasicScrollToBottom;\n","import addVersionToMetaTag from './addVersionToMetaTag';\n\nimport AutoHideFollowButton from './ScrollToBottom/AutoHideFollowButton';\nimport BasicScrollToBottom from './BasicScrollToBottom';\nimport Composer from './ScrollToBottom/Composer';\nimport FunctionContext from './ScrollToBottom/FunctionContext';\nimport Panel from './ScrollToBottom/Panel';\nimport StateContext from './ScrollToBottom/StateContext';\n\nimport useAnimating from './hooks/useAnimating';\nimport useAnimatingToEnd from './hooks/useAnimatingToEnd';\nimport useAtBottom from './hooks/useAtBottom';\nimport useAtEnd from './hooks/useAtEnd';\nimport useAtStart from './hooks/useAtStart';\nimport useAtTop from './hooks/useAtTop';\nimport useMode from './hooks/useMode';\nimport useObserveScrollPosition from './hooks/useObserveScrollPosition';\nimport useScrollTo from './hooks/useScrollTo';\nimport useScrollToBottom from './hooks/useScrollToBottom';\nimport useScrollToEnd from './hooks/useScrollToEnd';\nimport useScrollToStart from './hooks/useScrollToStart';\nimport useScrollToTop from './hooks/useScrollToTop';\nimport useSticky from './hooks/useSticky';\n\nexport default BasicScrollToBottom;\n\nexport {\n  AutoHideFollowButton,\n  Composer,\n  FunctionContext,\n  Panel,\n  StateContext,\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n  useSticky\n};\n\naddVersionToMetaTag();\n","/* eslint no-magic-numbers: \"off\" */\n\nimport classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport {\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.command-bar': {\n    backgroundColor: '#FFF',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .command-bar__actions': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .command-bar__action': {\n      fontSize: 11,\n      height: 40,\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      }\n    }\n  }\n};\n\nconst CommandBar = ({ nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n  const [options, setOptions] = useState({ behavior: 'smooth' });\n\n  const handleScrollTo100pxClick = useCallback(() => scrollTo(100, options), [options, scrollTo]);\n  const handleScrollToBottomClick = useCallback(() => scrollToBottom(options), [options, scrollToBottom]);\n  const handleScrollToEndClick = useCallback(() => scrollToEnd(options), [options, scrollToEnd]);\n  const handleScrollToStartClick = useCallback(() => scrollToStart(options), [options, scrollToStart]);\n  const handleScrollToTopClick = useCallback(() => scrollToTop(options), [options, scrollToTop]);\n  const handleSmoothChange = useCallback(\n    ({ target: { checked } }) => {\n      setOptions({ behavior: checked ? 'smooth' : 'auto' });\n    },\n    [setOptions]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'command-bar')}>\n      <ul className=\"command-bar__actions\">\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToBottomClick}>\n            Scroll to bottom\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToTopClick}>\n            Scroll to top\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToStartClick}>\n            Scroll to start\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollToEndClick}>\n            Scroll to end\n          </button>\n        </li>\n        <li>\n          <button className=\"command-bar__action\" onClick={handleScrollTo100pxClick}>\n            100px\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={options.behavior === 'smooth'} onChange={handleSmoothChange} type=\"checkbox\" />\n            Smooth\n          </label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar;\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollTo() {\n  const { scrollTo } = useFunctionContext();\n\n  return scrollTo;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToBottom() {\n  const { scrollToBottom } = useFunctionContext();\n\n  return scrollToBottom;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToStart() {\n  const { scrollToStart } = useFunctionContext();\n\n  return scrollToStart;\n}\n","import useFunctionContext from './internal/useFunctionContext';\n\nexport default function useScrollToTop() {\n  const { scrollToTop } = useFunctionContext();\n\n  return scrollToTop;\n}\n","import classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport React, { useMemo, useRef } from 'react';\n\nimport {\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useSticky\n} from 'react-scroll-to-bottom';\n\nconst ROOT_STYLE = {\n  '&.status-bar': {\n    backgroundColor: 'rgba(255, 255, 255, .5)',\n    boxShadow: '0 0 10px rgba(0, 0, 0, .2)',\n\n    '& .status-bar__badges': {\n      display: 'flex',\n      listStyleType: 'none',\n      margin: 0,\n      padding: 10\n    },\n\n    '& .status-bar__badge': {\n      alignItems: 'center',\n      backgroundColor: '#DDD',\n      borderRadius: 5,\n      display: 'flex',\n      flex: 1,\n      fontFamily: 'Arial',\n      fontSize: '50%',\n      justifyContent: 'center',\n      padding: '2px 4px',\n      textAlign: 'center',\n\n      '&:not(:first-child)': {\n        marginLeft: 4\n      },\n\n      '&.status-bar__badge--lit': {\n        backgroundColor: 'Red',\n        color: 'White'\n      },\n\n      '&.status-bar__badge--lit-green': {\n        backgroundColor: 'Green',\n        color: 'White'\n      }\n    }\n  }\n};\n\nconst StatusBar = ({ className, nonce }) => {\n  const rootCSS = useMemo(() => createEmotion({ nonce }).css(ROOT_STYLE), [nonce]);\n\n  const scrollTopRef = useRef();\n  const [animating] = useAnimating();\n  const [animatingToEnd] = useAnimatingToEnd();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  useObserveScrollPosition(\n    ({ scrollTop }) => {\n      const { current } = scrollTopRef;\n\n      // We are directly writing to \"innerText\" for performance reason.\n      if (current) {\n        current.innerText = scrollTop + 'px';\n      }\n    },\n    [scrollTopRef]\n  );\n\n  return (\n    <div className={classNames(rootCSS + '', 'status-bar', className)}>\n      <ul className=\"status-bar__badges\">\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit-green': mode !== 'top' })}>\n          STICK TO BOTTOM\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animating })}>ANIMATING</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': animatingToEnd })}>\n          ANIMATING TO END\n        </li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atBottom })}>AT BOTTOM</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atEnd })}>AT END</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atStart })}>AT START</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': atTop })}>AT TOP</li>\n        <li className={classNames('status-bar__badge', { 'status-bar__badge--lit': sticky })}>STICKY</li>\n        <li className={classNames('status-bar__badge')} ref={scrollTopRef}></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StatusBar;\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimating() {\n  const { animating } = useStateContext(2);\n\n  return [animating];\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [2] }] */\n\nimport useStateContext from './internal/useStateContext';\n\nexport default function useAnimatingToEnd() {\n  const { animatingToEnd } = useStateContext(2);\n\n  return [animatingToEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtBottom() {\n  const { atBottom } = useStateContext(1);\n\n  return [atBottom];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtEnd() {\n  const { atEnd } = useStateContext(1);\n\n  return [atEnd];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtStart() {\n  const { atStart } = useStateContext(1);\n\n  return [atStart];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useAtTop() {\n  const { atTop } = useStateContext(1);\n\n  return [atTop];\n}\n","import useStateContext from './internal/useStateContext';\n\nexport default function useMode() {\n  const { mode } = useStateContext(1);\n\n  return [mode];\n}\n","import { useEffect } from 'react';\n\nimport useInternalContext from './internal/useInternalContext';\n\nexport default function useObserveScrollPosition(observer, deps = []) {\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!Array.isArray(deps)) {\n    console.error(\n      'react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.'\n    );\n  }\n\n  const { observeScrollPosition } = useInternalContext();\n\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  useEffect(() => observer && observeScrollPosition(observer), [...deps, !observer, observeScrollPosition]);\n}\n","/* eslint no-magic-numbers: \"off\" */\n\nimport { LoremIpsum, loremIpsum } from 'lorem-ipsum';\nimport classNames from 'classnames';\nimport createEmotion from 'create-emotion';\nimport Interval from 'react-interval';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ReactScrollToBottom, { StateContext } from 'react-scroll-to-bottom';\n\nimport CommandBar from './CommandBar';\nimport StatusBar from './StatusBar';\n\nconst FADE_IN_ANIMATION_KEYFRAMES = {\n  '0%': { opacity: 0.2 },\n  '100%': { opacity: 1 }\n};\n\nconst ROOT_STYLE = {\n  '& > ul.button-bar': {\n    display: 'flex',\n    listStyleType: 'none',\n    margin: 0,\n    padding: 0,\n\n    '& > li:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .panes': {\n    display: 'flex',\n\n    '& > *': {\n      flex: 1\n    },\n\n    '& > *:not(:last-child)': {\n      marginRight: 10\n    }\n  },\n\n  '& > .version': {\n    bottom: 10,\n    position: 'absolute'\n  }\n};\n\nconst CONTAINER_STYLE = {\n  borderColor: 'Black',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10\n};\n\nconst LARGE_CONTAINER_STYLE = {\n  height: 600\n};\n\nconst SCROLL_VIEW_STYLE = {\n  backgroundColor: '#EEE'\n};\n\nconst SCROLL_VIEW_PADDING_STYLE = {\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  '&:not(.sticky)': {\n    backgroundColor: 'rgba(255, 0, 0, .1)'\n  }\n};\n\nconst SMALL_CONTAINER_STYLE = {\n  height: 300\n};\n\nconst STATUS_BAR_CSS = {\n  bottom: 0,\n  position: 'sticky'\n};\n\nconst createParagraphs = count => new Array(count).fill().map(() => loremIpsum({ units: 'paragraph' }));\n\nconst App = ({ nonce }) => {\n  const {\n    containerCSS,\n    largeContainerCSS,\n    rootCSS,\n    scrollViewCSS,\n    scrollViewPaddingCSS,\n    smallContainerCSS,\n    statusBarCSS\n  } = useMemo(() => {\n    const { css, keyframes } = createEmotion({ nonce });\n\n    return {\n      containerCSS: css(CONTAINER_STYLE),\n      largeContainerCSS: css(LARGE_CONTAINER_STYLE),\n      rootCSS: css(ROOT_STYLE),\n      scrollViewCSS: css(SCROLL_VIEW_STYLE),\n      scrollViewPaddingCSS: css({\n        ...SCROLL_VIEW_PADDING_STYLE,\n\n        '& > p': {\n          animation: `${keyframes(FADE_IN_ANIMATION_KEYFRAMES)} 500ms`\n        }\n      }),\n      smallContainerCSS: css(SMALL_CONTAINER_STYLE),\n      statusBarCSS: css(STATUS_BAR_CSS)\n    };\n  }, [nonce]);\n\n  const [containerSize, setContainerSize] = useState('');\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n  const [limitAutoScrollHeight, setLimitAutoScrollHeight] = useState(false);\n  const [loadedVersion] = useState(() =>\n    document.querySelector('head meta[name=\"react-scroll-to-bottom:version\"]').getAttribute('content')\n  );\n  const [disableScrollToBottomPanel, setDisableScrollToBottomPanel] = useState(false);\n  const [disableScrollToTopPanel, setDisableScrollToTopPanel] = useState(false);\n\n  const handleDisableScrollToBottomPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToBottomPanel(checked),\n    [setDisableScrollToBottomPanel]\n  );\n\n  const handleDisableScrollToTopPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToTopPanel(checked),\n    [setDisableScrollToTopPanel]\n  );\n\n  const handleAdd = useCallback(count => setParagraphs([...paragraphs, ...createParagraphs(count)]), [\n    paragraphs,\n    setParagraphs\n  ]);\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () => setParagraphs([...paragraphs, 'Button: ' + loremIpsum({ units: 'words' })]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAddSuccessively = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const nextParagraphs = [...paragraphs, lorem.generateSentences(1)];\n\n    setParagraphs(nextParagraphs);\n\n    requestAnimationFrame(() => setParagraphs([...nextParagraphs, lorem.generateParagraphs(5)]));\n  }, [paragraphs, setParagraphs]);\n  const handleAddAndRemove = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const [, ...nextParagraphs] = paragraphs;\n\n    nextParagraphs.push(lorem.generateParagraphs(1));\n\n    setParagraphs(nextParagraphs);\n  }, [paragraphs, setParagraphs]);\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(({ target: { checked } }) => setCommandBarVisible(checked), [\n    setCommandBarVisible\n  ]);\n  const handleContainerSizeLarge = useCallback(() => setContainerSize('large'), [setContainerSize]);\n  const handleContainerSizeNormal = useCallback(() => setContainerSize(''), [setContainerSize]);\n  const handleContainerSizeSmall = useCallback(() => setContainerSize('small'), [setContainerSize]);\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) => setIntervalEnabled(intervalEnabled),\n    [setIntervalEnabled]\n  );\n  const handleLimitAutoScrollHeightChange = useCallback(\n    ({ target: { checked } }) => setLimitAutoScrollHeight(checked),\n    [setLimitAutoScrollHeight]\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        containerCSS + '',\n        containerSize === 'small' ? smallContainerCSS + '' : containerSize === 'large' ? largeContainerCSS + '' : ''\n      ),\n    [containerCSS, containerSize, largeContainerCSS, smallContainerCSS]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  const scroller = useCallback(() => 100, []);\n\n  return (\n    <div className={rootCSS + ''}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddSuccessively}\n            title='When combined with \"limit auto scroll\" checkbox, this button should pause auto-scroll.'\n          >\n            Add successively\n          </button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddAndRemove}\n            title='Add a new paragraph and remove the first paragraph'\n          >\n            Add and remove\n          </button>\n        </li>\n        <li>\n          <label>\n            <input checked={intervalEnabled} onChange={handleIntervalEnabledChange} type=\"checkbox\" />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={commandBarVisible} onChange={handleCommandBarVisibleChange} type=\"checkbox\" />\n            Show command bar\n          </label>\n        </li>\n        <li>\n          <label>\n            <input checked={limitAutoScrollHeight} onChange={handleLimitAutoScrollHeightChange} type=\"checkbox\" />\n            Limit auto scroll height to 100px\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <div>\n          {disableScrollToBottomPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n              scrollViewClassName={scrollViewCSS + ''}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {paragraphs.map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input\n              checked={disableScrollToBottomPanel}\n              onChange={handleDisableScrollToBottomPanelClick}\n              type=\"checkbox\"\n            />\n            Disable this panel\n          </label>\n        </div>\n        <div>\n          {disableScrollToTopPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              mode=\"top\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div className={classNames(scrollViewPaddingCSS + '', { sticky })}>\n                    {[...paragraphs].reverse().map(paragraph => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith('Button: ') ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && <StatusBar className={statusBarCSS} nonce={nonce} />}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input checked={disableScrollToTopPanel} onChange={handleDisableScrollToTopPanelClick} type=\"checkbox\" />\n            Disable this panel\n          </label>\n        </div>\n      </div>\n      <div className=\"version\">\n        <code>react-scroll-to-bottom@{loadedVersion}</code> has loaded.\n      </div>\n      {intervalEnabled && <Interval callback={handleAdd1} enabled={true} timeout={1000} />}\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App nonce=\"a1b2c3d\" />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}